(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    111487,       2061]
NotebookOptionsPosition[    110872,       2042]
NotebookOutlinePosition[    111296,       2059]
CellTagsIndexPosition[    111253,       2056]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvb+vrEy35/f4h/Q428522HLUYYftDDlCjpDGsgjRjDxGkwzSjCXkv4CQ
kMABkhNCwpIsS1hOmHHCvRFvxs0ICQmX16oCGpoqGnr3Pnvvc9ZHeu99zm4o
qlatqlVVFPX97/5N8K/+1//yr7/++o//Df6ff/Wvw//hP/yHf/2//0//Lf7j
f/73//Hf+f/+3/4v/+O//9/+rf9v/8N//2/+K/zjBa+t/4u//vqv8b+BYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRgGOiiTEMI4gTTNIMsyEHUNWZRB82SKbRGDe75AWB28T0QQJikETgCi
385zlflwPftQPJnHV9ILD85OBu3rU4bcPYObdy9PmWHWFOCfbUiaL85GX0Me
WnByc9jsBjZoiggcKsvrG+XGQ3OIohQS34ao3L60LRNwL1eI6ldn4pvU4R9P
B8K3wE2bxV+bzIH3a/x0bCWEdz0YW2uILA8E/lffrWNJgzF/mVwJwfV7xFbo
G6ibJ+NflUHebCVdQ3Ogg1nbiWEM9AKyxbith7Zu4FuM5JoYrA/EVurbUtv6
pbG1DCzV5/Xd2oYrWz/TR+7hG9XhH0xf+HCyEk0MrSD0fnVsxWdaAeiGe32T
gbf6rfo+sfVZcHyeODbELxq76u3EMDo6KCMLnPSb9sIUW53sR8VW4VmGeaje
1p8TW5mvpwfhvsHFsChRF8W0xtnXGSRpDkLg2CvBeVE//QAiL6AsckjCGIqZ
Hxv9pitlGpRWniaQ15RYB1Uegn2yIEgzKJr5DS3mJQb77ECCeSrq0T8ptroQ
F+r5kR+AmDLcQB4nkFF+4wiy+q6FdhWkmL+THUGeCyxDAmGYgsoK/XaBs5fg
32Nw8ZpqywY4AhGRDadLBPVg1zqLIaF00wiiMVOYbhJheWV+BZQ4GW0rAeH1
DF6K5Srr9Vizxd+td7CGDqItUkjx+QXeH/vxXQw12amFIlW2EDndv+5s+jqH
wDqBFWTSHnlKa/OlzA+V27+ewI3x74kPdlBgCTVl3LKpNFOBZS+hEClEUT6M
2zBvsQPna4Bj+gwix1FrWY/qz5je3SUCfep8AR/rLRc5phVCJJ3U8FyjrdR7
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
2dj72FVYRvSLv3DuTXVwX0aTzqG2Laztsvb5jTQ3tRAVH9X/WumKHdYPU3uZ
yCdoH05Rj3ukND5MYz+KmQ8bjKZdbei8afsFXSzfaHftTPOvaB7rEDY0znsQ
Nkw6mv9X5EGYqXZI+7PKzqwBqS9bq/cNOwLRtIt+vtujOTdl+ICW3QH9wT8a
1n06Rt+qvSo4zxamuMy8FvbR34AO6iLFMZzh52/froa1WxpPiD9Zy4jZD+s+
HaFNHHCzGseO4kfrrv4s2Ed/C+oCTGHz27erOgLbF3KPg+5zO4YxwrpPO+Gz
bL4M9tEfTAvl5nzv+7errqlZJ5BhGIZhGIZhGIZhGIZhGIZhmBu92ld9mn3r
9groW6vz/JuqT+PV+lj0Tdr5dq7fB6AzWN3z5biGxE56+Q3VaXYm5N3zX1UH
n+Ejn+R3e2iKCJzz+K3k6+r7GT6tnTToG/b2d56/hHsdR/o+8hKxVsgzvKjN
sMbo59Fk2dK36Vv9V/dxXQP1/EDVKoPp8/aPsErn9Xsfetqr8CJjPKXPdIAm
uhpj66oOdrPWw/u4j3xGms/nJbWt25m5L6zv41l5to52JJ1+E52lxdlndE7P
R/Ok8aVfxKrv/NXP+3CbYY3Rz6JvMvCsuzPNntL0OvLQGhLHns6U/vJ0fiGf
Hlvjjdj6JDo9vI/6yGek+TzL2Pq78m00DB+dK3oQrS/9ArR9569+3ofbDGuM
fg44ZixieZZYQppV43kzVF90nocooRQx+H52+7bMoNO2SHWljdRA7l8HPTOc
V1ZC6l95dL5RWavzOY26dWDQZdKns9LHOqrVtSqMOqtqOud9VbYlfZ1LzSrS
istzemYE4UxvahFbtdp5ql72a3RhWZJ4OhcpcS83jcAF8zp4pBE2w6CHt+Uj
D7XEDqZp0rzTPmev5l1XQRrH8ro8p/SH2Lqo7yO6Xbr8bPmZTgdxWUdmXb5R
F03VnSA9wnj8jkWv8yV/2Yytep/T6hOO16fKzoLOPhsmO40IwT7ZEKIvpoE9
6TLpdRx7qFL0g/fhbPzNclEfgffLM8ewTaXDWWsmvcaHenZr+7cbenbrdm/o
O7f0+OjsN6nL5kMkKnnW6ap/NfIZffX30xj9vdCcJ07aY3Q+twpsUltDHbdp
1pua3azXRhr0zMY+I3PWZ7wbdesMukzmdG5noT6l1XXHrU8y6T7dWSCxZuev
91D4l+n93Ty2mjSrjmh0NYkN9uzlchWeDbEV7upgW2NsgUazx+gje7XEjqQJ
Gs07w3P2ad51kLvWbP0A69W6zVuXMWifbpe53AY/0+ogwqKONnX57nXRJj1C
s87XVmzV+5xZn7DGPvR2/hX6OMbRaNAjypx3VQdtDXK5d1PHsVxo2BvLRXVk
j9pvnTrjeDpG914/Y4cPGuyv17Mztfv7vnO/Ht9l0vA5smby6r76lub6PPkv
0Bj97TDU10zzZNJH2dCbmqPVRlqsXTyKiXBXX3pdpofpPK3VtWTeJ+l1n5bc
6ykpDRBVlkUZtZpVRzS6/rG6VupNbsTW5Zn3Zq2oBaY4qPGR3VpiB9Ik7jXv
9M/5z/s07zDmOO+3ur/v35YxaJ9ul7ncJj/T6CAONhjr6JEun06PUBbPoPNl
jq1m7Rq9PiHpHy37Wqqfi5rIYJu8aT7IbG/qOFbL2LpRLtJ5qukMXWwvkXW5
tfs7X9rngwb7G3Qi9e3+ru88osf3oC/U8/q++jtpjP5+kC2G/qGu1XqCSddz
Q2/qRq/XRjLF1m4Y24K5vky6TA/T+YBW15xbn2Qo2x37YqtJs+qIRpe6dv7+
9lhsNeugLNDo4Zl8ZLeW2IE0ZUnvdHn0z9Fr3lWxK8/yl+f5RzT3xdh6OhBb
92iLGMttuF+ngzizAdXDQ10+XQza0Pk6HltN+oTUX15XsfUcjLF1GXe3dRzX
sVWvSYPzMEzXF6odkm/MY+vcl3b5oMn+oNOJNLX7u77zKT2/Y7H1tX21SvO7
aIz+ftzWZLqyUOsexj7OrDd1o9ZrI93F1qlumhJG+RO9bp1Zl6kypHOr9w9o
dc249UmGst2xnGOZ1oTNmlVHNLrUmvAt34/WhJ+KrRo9PKOP7NUSO5ImaDTv
DM/Zp3mn1oRv7X1rTXhfbDWX23C/VgcRFnX0UJdPE4M2db421oT1PmfWJ6zC
2Tqf9HELwlLNd+5j67aO487YimmMc3bZri3sr7FuC1qzvfelPT5osv/w21LP
ztTu7/vOZ/T8jsTWV/fVxDfSGP0NqRMfglRIraHx3fT7yYEY/63eW7+DFQ5a
alqdtkVqa20k2os0aBGlw3pKX0bgh5l8Bz9FIa1uXWPUZeo06ej0sZ7V6oLh
/lhqNcUYu826T4tbaH3MV/skRBZDmFbDfi3M24XyRrbc0qw6oNGF1wq5J0dp
5KXeRepKrc4Nv6uDbY2we+708B74yB49vCNp/tM/9Jp3+ufs1LzrSkgmvbwc
+6yTqpdmXt8GP9Hqdunys+Fn/1+21kFctZPHunwrPUKTztdULsq7bgRl8Dmj
PiHWV4L9QKH0DJO8mfbIuSeqtwxurmTScfyXyT4+lX9TZ7GGFP0lzpUOm8A+
y8P6K2qNLxl9Y15cjf1vznGnZ7eh9zbvO8e6OaDH18hv3t/BDoVsOzSeOluz
d9x3vLav/m4aowyzzf2aMMMwP4DvoGeH8bIk/davefoN1m9kviEcWxnm5/Fd
9OyaovgGenqs38h8L3p5tty7Wpdtvjo3DMPs5xvo2XXV99KAZ/1GhmEYhmEY
hmEYhmEYhmEYhmFeTCNSEM1X54Jh5jRQZMUf880gw/wIvqt+ImkTBhacvkQX
xUCdQvxbbZQbzpK/6HUwPkdL9NX6ujvoac9jDFlM5/G+7oCYz9bjPQSdq542
29d8szb1SG/4OyK/If0W5wxtt91fnRf6Fvl6np91yLxGP/GTuDtb/mvpIA+/
4Rjkw2jOKB15hZZoLyBbnOX66/di0rkx6pzyDroXO9NnawYeoYwCeCjp/mlt
6jkN1U294W/K96nzjbb7yax1a5eaC8w358v0PDV06lvq34/PbJ84to7M+kK/
CjpHb9IgeTHfp59FyhD87IGtP6lNPauh+hl6w5/N96nzr4mtet3aimPrgjv9
xL6CnDQWSR8wCyDUHUQ/YtQe1VxKmo7nC/iYdi5yyOJQaiJOuTBpRE79QA91
HoD1fsJ+Wp1N1qQOXLAuc3qwQWfQpDG5W7t0binhLc7ENGlrmrRGP2pDebk8
N05pcwqhztnb1qfdoztK53/bEMm6IX3FWNn0kN6rXjO0bzBv/kWe9UbPbfpP
0Nd9UB9kYzoH8uzGOH+u9PNl0nLF/pK+Sc5zpfkZhincjqDV+xFx04UoIXHP
8HYJ1HmTHY3jL+BI7V7S2A0hJk3TMEDfFFKHWJ25rvH9vka7YX7o7Dkq/0KX
U6f7OpYD+zxfbMfNu3O9tTYby6zRc/24hupeveGBWkBKPk9nluK8PKnN9XFI
J3WlbUrnS9J5fWfw8hr7G1+dxUhptwL8yxn7nmrS2/BSMTyD2sF4EOBap/SQ
9rCxzkz9hKntmuqWzki04f3dglieqdlKfZ6Ll8kzWNX5mqQ1hv2n6SBhk46s
jK0uxFN/E9zOIv5j9Vtnc3nhT1rG9PfcaF+z9qgeOo96rrNBOk620lXd0Ii8
H2PTM6fz2qt8qDuzzqBZY/KAdulAg30HNotbiTa0NVdaowYO2bCen8k9nvN/
TJ9WqztK7RNjsLgdCA/ueJ7pXr3XDc1Q3RlVr9bXlY/d0jrd1AQfHx3CZabV
RfdchvS2/Wg2hyE7THbFfisf8kPnzI9pD3ZTMWnb96+TjslcH9eg+yopIHAf
aGPOtQA2bKbVc32BhuohvWGgqbh3ewbGWZKmOdKu9TqpJm3TTp11P/hmao/v
VfEZ+S3+mdqBSad0r/awCXM/YW675rolXQp7anMNji1oPNeXOHeZ9lbgNc4s
3RW6+TLG1vPtPfS8vf65+q2zuTy19csJ+wEPguTBvkOt9qjx4pXWA2lTUn9n
1oiE9foV/dsmLYwex6HjGNukM7ilMXlAu3S6xF2sA21pa95rjZrNst+GKw1M
WaCj+rTj/fO2odGEug7amAf0Xk2aoZux9UX6usQjrdM9sXURGyhvJyrHIz+a
rw8qXSafBgc415gkygadlim2DnZ75Pt6LVuT7qiyWeiaz3mX7NKH1WvOST6k
oXpQbxhUjLiezmC5PsSC9AAOtmudruWGtmmHdXKltDqckwbDe/qeNEJuedS3
A7NO6T7t4Y2Zq7GfMLfdx/0TGRDnscNHD6RneA2EyjvOxxPPA/PWOENs1bbX
P1m/dR5bW2zLPTRlDol/VT6mxaQ9akITWwOMrWm7oREJmndDOJakdGhNqrz9
Va8zuKUxeUBfbbrXXfQJW9qaKz00g02O2HClgaky9aQ+7VZsxTGrMbYabLah
GSq1MFO1/lQPa0Gv1teVpXikdXo0tuL80B5i624/Ikib1M1w7Dcfm9bYVwWQ
0JpYFEI2tIM9vr+KrRu6o2remuyet5ptZoqtH9VQPag3DNQldfIM/UokEOA8
0hf/9GS7nsfWDW1TmlNeQ7kOXuJcw0P70phxFloNzzDrlO7THjax1U+Y2+5W
e5Dlp/ltJaZ1W4rF+89A1+jIGtvrn6zfeoutPY7fosnvSwj8zPAewKw9qof8
ev6twnxN2KwRqdt3QX5JGkwLfUCDzqBZY/J4bKX3rXMNiC1tzX2x9aANqe+f
r6U0JVTds/q0y9hK60pT3yG1L6OFNuSj2LqpGTo9t8Jx+r3tX6OvSzzUOn30
0Q/1PbOy0v3jmvBuP1KGwbkDjtPFrP57AUlSr/1rh++vYuuW7mh/7H3rls20
eq4v0FA9pDeMFDgWmXyzjsHHsj/Xrufj+y1t006+v7pGhSyL8LAtJ8s9E6Zn
mHRK92oP69nqJ8xtd6tuVRkxneimldcPevVTLmrqXwxZ0unIbrTXP1O/tVvo
J3Y4/3PjXK4JkCZjXpnqe0t7VH89+SulLXVU4xDi2d4hrUZkP7x3J53DuRgp
9lPx3TeKZp1Bg8bkIe3SgfZ+n7BeW5PO6tdpjb7Chg3t0Rr2momiGeaMB/Rp
tbqjJd6fy70ipIuZxokapxzRezVphsqsCAjxN1pDJHO8XF/3QX3MtU6zrfql
2GoFgw4u7RnJZnuZNvxo0uO9JdXQWG8xIKwxD1ewbPJR9E/ntg9M7/u1WZez
2dAdfbRPeNWmDDaT6PRcX6GhulNveCxShL6UqefRXi+1Bn68Xd/rpG5pm3Y5
tsuhAnvsW4LZeu1237HWKTX1B/s0jmUONvoJQ9sd7jPXrXrH7N3tzawz6l+E
3N+Vj/2LgaVu7aP2yvqtn8d6TfhwCm2r9uFWYtkOf5nOII71gujrdRWZz0Gu
aeYfSADHH3J/LM0pqoU/lqEPi+X+nt6LRtvvRZ+gxDHrw+9bGYb5jfhobO0h
9xxIqkp+e7KMmr9QZ7DG+cxvdS4TM3H/vvUodQS2L+Rehfs5WCciCBMhz+Ho
6d1hHuE85N6PP0ib45zjj3ypxTB/LPK7s9Pbau3sEL06P8p4+y/SGWyKzLh+
xfxQ5FmAV3h79F7gAV1TQ2OcN9J5VBWUZbVxzbO0UOZ8njDDMAzDMAzDMAzD
MAzDMAzDMMzvC50PO5z/mSWQPji7V8u30sf6szWVWrk3J4XACdbnojUCQvt8
+xZ1j4ZhS3v2zw/O9nqQp6N6eN/Kn+ADemvfSGvsBfWoGL+xoXN8SDvvxfu+
fiHP1Otn6dh9PN0WysRFX/sd9cB+KGUAzlShLSTu1lmVG3yh5hxrKo3UEFnq
G/G+04+RunR+DtI+DcPNs5OqbHYGuSmBJ/Twfhu9tS/SGlvpB+48A+sBC92i
roQ0+7mxlXhYrxo7fpbWzsfTnZ9Fznw1ZXABdxZMC/8CT8hRfZnmHGsqzaGz
k7b78Wf6V+M9OL9MHHs6s/+l/DZ6a18RW/X6ga+IrXSO0U/Tndtiu171duTY
+ptQpxg7LtgfpFDVpGf0yt386vx1v7j9hc45055d+Ujra9EX6nXNaE0ysE5g
R0oLTaQBePE47t2rozTnCU2llX6VIeWC9LHUuTexHw99o0E/S57NM5zFKs/X
seAkz1qj83McOGPfmuUZRI4znOWm1wjbrW1l0H6r8hDskwVBmhnPSLr1r3ca
hhtaa/KegM5nKrH8WGfy+08sXSUgpDMEU9INqw35Xerh6XXJdLf9ML21l2mN
Kc3G69tMszEjHyLNxn1tRKcfCMZ6VPnYl24htfoufgpZlkEaOXCarXfT+4go
wXKiHwV0zhu1/X9S6/tj/dNZV9649in7lAuc6SyrPJb6M5WxPvba/JEG4v56
NdnRqGO3tw8z6IWa0zX0p5RUjf0Y9mekD5pj+7dmsXWtkbhfq+9PoKmGPgvL
HsfC8J0ctccYfzf/L9MGEdJ2wtg6G1TTmZjG8103tL4WfeGGrhmdYXvCeYNK
A/udYUx/TEdpzhFNJZN+1T34fG+mxYZ+S+lv62ddDGelYhlPSvurqyug7lyr
EbZb22pL++3xfH05d5mtnZu01uQ9tjy//L7Odp87Mlvf1emSme75SXprr9Ua
o/Wk2XyqymU8PtJGdBpHpno8mu7t/N2lHqI/lbNYzp+G+l/rBsGgNUcxFccZ
VQP9AY03s83NGohH61WvFaXXsdttR4Ne6GGdyL5Q7XfmW9N1Ro3EfVp9fw6t
1G17/ffnmnlrcJYaOFqMWl+wWsMz6ZpR337TjCmlLgs9/piO0pwDmkob+lX3
1NgGT2dsk3QWb6XOa92tZ3YfWy/zeKfXMdmtbfVI++1QbK0WsVWntTbeo6uz
I7F1HieXumSP7/kJemuv1hpT+g+qPiqh+rwjbUQfWz/e9syxtVRtboit/tzn
TdoGQzkvcz3EIxpvRpubNNXW/vKoXvWxVa/nuNuOBr3QwzqRhQ8ne67ZonSC
5PLZhkbiHq2+P4K+wbj6edoEpX9evG8ovLP5fatR6wuWsXVD10z27Zr2fUxH
ac4BTaUt/aoFvTp/ltYQ0xB92YWsfVYX775vNcXWndpWD7XfnoytBq216Z5H
sRVtZdwWNfONtS6ZoT3/KL21T9Aaw/qQOtkN9XmqXRxpIzr9wFe0PXNspTOT
lQ6EXA+dnz+6iK39KrbO33/v13jbsrlJ9+W4jt6mDqNKYGrru+1o0As9rBNJ
sXWxJ2EeWzc0Endo9f3+kEZBMp3j1+TZnd7yCPpZFkMURYb/mdaEld6RPYnX
PViL3dD6mveFm7pmhvZ9TEdpzhFNpS39qjnYr4X5be079aXPb+lnFdhGxj5e
9g/OMrbO9xdoNcJ2a1s90n57MraatNZgO7ZO/QHGAOORhPM4qdEle3TP99db
+wytMVW2q5NM9x5pIzr9wFe0PXNsbSGL0+md5N1NYDvjuyQ1bzfF1v0ab1s2
N2uqHdXR29ZhhEUM3GtHk17oYZ3If2DfYpnWhDc0Endo9f3uyPNxm0buBbhc
bQh27e85inq3n0kdsQjirb1SJq2ve30sk65Zc9MUEzjJoe9QL/QuPavUHg6N
jhL1P2cr3tQlOaSptKFfNUsRx5MBpHKfRA5pKqZ+WqefRfRVDAHag/YbiJS+
r7UhEv88acb5aTHrd3QaYQe0rUzab5nam+AlQn829KDpNunZzTQMe5PWWrtV
Z9SfROCHlGfDO4s7PTy9Ltn9PT9Nb+1ztMZoncUL5n3eAa2xO/3A7Xrcl+5c
k61A/6E9Q+c3CwKppYc2wDq7zvQkaa9UN9gyD2lNRNmA0pB7M9vxrGgPf7uN
6/a1A5PN//mBptoxHT29DqNJx26nHTV6oc/qRPZVKvePyX18IgL7/SrrVPYI
Oo3EsVgbWn3MF/Bhra8noDVx6oN/7VP/OH6V1hrze0L9s7+Y/+F8yPeWPsUw
jJ6Pan09SYNj/uaXP/XP4pdorTG/L00mv8krSOuqp3mY+jePzRjmAS/S+jpM
V4HQv2RmXs5naq0xfwJ9W8t9stXRc7gYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hvnmdPLbyJsOKZ1ncp6dXfBN+Wbamx+BzutPMvpujP4/75llGIb5PVjqkPZN
rT/35LvxhVquL6MX4Lnp9C1/FTnGM8MZhmGYn8QP1SH9Ii3XV9ILT57nOP07
d6dz+RmGYZifzCy2tgJC6/12FqxOh3SnNuZa10/+ETL/Cic3gZJ0BUUMvp/p
z2z4dC3XAxqOfQWxe5VnMeZ1jde/Zu1WatzMBV4w1p6+4NwMhmEY5tUs5623
c9b1OqS7tDGNun6g1nLPS21OrbypzNrnabmaNDW1NNV0pjHpGuiOmejKbFPb
NtYYqomvy9haeDd9b4ZhGOYHY4itBh3SPdqYW7p+MrbO4uVCC2qVtc/Tcj2k
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
lTRWX/bK8kWxlc4N9pK7cYwptpK/eHq9UoZhmAf0wl3MGYkudQ3zu8+JrU18
XcbWwpNzq9t9as14OyqWELrxTb9axjyMrbOi0Rmi1sPO8lWxlcrlQvDgJaHR
1rtj64w2A/ca7H9PqL3+GVsvqUJroTP7cV4VWzvIVu8FhNRQ01VTm2D97X8o
wzAM0JpXmUXg++NZ7zfq2DHEhF83b3135/dhX+48en+HfaQzjwmaeWtwBuvh
gbKvi61d6sCjI0+Ntj4cW1vI6Dz25qPXP2PrG32J8/Do0X4qOhcnhyiKDP+L
QSzy9arYSq7lrM4UbnI6Oz6ZnYGvIG2Vx+8QGIZh7ugqSDzaN7TswX91bKV3
gOfZBLPPHDgH81W6Pf19vurvS/+MsW32vtU7/7r3raC0rrxfElt7qNIIxi27
dH7u89c/Z2tJKyBOhriKab7uK5YXx9ZFxjsoQgf8dK2R06YubLy6ZhiGMUPv
W+86kGNrwp3SBdehiw9dC6vLuxxc5/YerArtu3gjltrOujToXdrdOmWPZbOn
d4cNxM5tPXDxfvCuPOtYSdrnpu84N9aEk/masN5Oh9aEteVW3y/dvsdsQIj6
ueslS1vr7bS2Ne0xztLbfLUvxPC+dct2eznod8bY2mvWhNH3DFrnVeTB5qtr
hmEYE4a9TO7d/pquJp1XT+ljJhkUQ98stY3P998eqm8oU1+dpx1nN91Xeud5
8tY6oK2IIc4LKPIEovRuTbFZ7q/Rp9FBdre/Rn6zSVqUUpMygnha/G4gsd4X
OtMqE/SNZgzO6R2sIMX7miGZDJx3a72vxXT9YAO5l2n8vEVrJ9DY+qDt8P7L
2xu8v7+r/729T3P1o9cr08xtbbDTytat1Lt+G9PE/71dhj22Jtvt5Jjfma9X
4Jx8914mLKM/S590yN0fpgXEMMzXof0Gp4LI132DY4B0Rg48ssLrj8xjdN+F
6NLosmC1vm2mwWwf6Cm7Esojnzv25fobHK2djtn6qO0+bmu9nQ7Z+qjt9nLQ
79Q3OM3dHw2xtc0g5O9bGYZ5FhyPXzSLkvLsg50dV12UB8bzLRSHxJ0qSOP7
8wxMadDZB3u+KQXZ3xcHOua+Kg5pX3Z5DOld12yy035bH7XdC2xttNN+Wx+1
3V6O+V0PRaLRL+0zeXZEdXdtlcQg+FwmhmGehc48dJQO4v0aa5FmcH9M3Iqu
wr53fyfU19jP7u4QsY/L1ufwbaVB+08T8fgBTVEYvyFZ00od5d3hoRWQ3p95
uGmnfbY+ZrvX2HrLTvtsfdB2eznod12Zas48bNWZh8kyf6TtKR46PsMwzCPo
DFbSj77/ewdPHTv/Mp57fv8Nzuo//ny29WfSac/qL6H+dprpDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDPNVNFCkAVjvf8PZjSE/oL21RVsm4F6uELFE
9Kfxchs3AkL7DFay1n4j7bTQOoGbfwPtl76GPLTg5ObfW0fnQT7b1IazXzyl
e1SlHlzPPhQbV93Sv7t+o56/iudt8SwdlEkIcRaC62X7tHw/2e96WS8ncLKP
9sE95O4Z2+or+vIW7eTC5RLBAclqZqKFxHoHr/hAEr2A7K4uhXeF8IsqpMmy
F/lCB3lWvCSlz+DVNu5Sx9jnNtH1xbF1v21X9dnEYH332Eps5bNrPqBTV0Jw
3Y6ty/SX12/V82M+2iY093/IFk/QpmA7GdZLr9EQnDK1zucn+12TWOCkhpio
6WNN9E0NzcsyKcC7hhxbn+KjsRXHgNHaJ74qtvZNBp4VYG/ycVoRwNUTL0jp
c3h5bM02Ymv82ti617ba+qQ+TvaN35xPy2f1OLZuXL9Vz4/4aJv4Fm1qiJFb
aPP5yX7XYmy1tbFV38f+Gji2Ps8ytrZFDM75CkFeQFEUkIUeRIW5TvumhMy/
wDXI8fpyGi9Rv++lAopyTGP0yB7qLIYkFyDSCCKx1cZbKNIEMoHX5imkw7Vy
PfR8VnGlb0BMazUt1Jh/++xAgnkv6g6mdY2zC3GegxA5xGEEeUMpdVBlPlxO
HghVeIidM9jU73Q1FHjf2YpAYFqVaVzdlpC4Z3i7BFBQ9jqaI1zASUpM/Wj+
TUauIE9zmY8iCyDM2oc2bkQCKdlYZJCklBekKSCyT2DFjSx7nfuLtcVln0vr
ZkM9od0SF8u0FVsxj2kY49g6gyiIsKwZhJGQc4NVfe+1rbY+QfVxNt4rSihF
DL6fQTPdUkASZ6qeoxSqjSy3AvOT5JAnIQQx2jcOIfnPWA7vAmcvwXLH4NrD
ehjaLkf/LkQKUZQPz9vyra18NpD7V3if9dMNPivOVF0KUU31tX4m8Si23qdv
iq0b/i//ST6LeSoExH4Mpa7eOr292hLtQWXJIgjTWuVDW+/3eTX5roDAOoEd
qX5JpAF4cbUZ5/qa7qd6wTlfkilf6GusZwfOFx9StHetS8Dknxt+15UpxCm1
lQSiuICNHlNfPlCx9eqn2IZUOnGiftP3sVh3QvlLTn5bDqm09P7mfarfMvXQ
P33IqP0UOUR+APnYxLHvyWPVP2VxBNlgjL5GP8Y2lKM/53kIFsfWJ1nPW4WH
PpwOFVCFD8eZuvGWKY2+DMCa3q002JaxXRsaSI1twMtv8aIIbIiqMf3Lbc5W
R3CdYlMB/vV+3lqAd549p0nQXyJQryoxFl6GvgXUu58pvlC+3R1j7C4DZ/K/
FttFKfPyXP41CB/TGe1bos+PsdVk4xDsoJzS63IPY32j/pvKFzdTWr5hPtMk
Nvax43WU/HkztrbJLd0mtqf3Rsb63mtbXX1iH3c9499koj1kzhXUoxtIbYzD
g0l6tJs9lVWT7uQTxXJsjnlT75iwH6waUNnFeftQphrnELc5/IZvGfM5/DbG
k1rNh1TqWCcYqyl58zN3zFvn6W/OW03+j3XljW2Euuxc1YGu3lb2wnttC5T7
dFgn9lQn2vtneX3kuyf08W60+6qdz+gE+E485R8dFBxsY93wvIfzT1M+dfXZ
5XJMUU+32hAaMrZVPhlbZ/5a4ZjbE93026KPpT7nMvhsj8+/3p6/rl/MZz0W
4Tb/VT7VTem5TgptXyhf6TXPYQ6ii60XCEbfeNTvgym26tMo/BOOvwSUJY79
cMyVeB6kjS7VGqKLBfOukZ5zGQLSYj10R2xd/o3Svgz7gKjf+WBsxSdTfnxy
SJxriPoj+ddA/cTlBBfbgyAppr0XJhuXPu2JmKVWY99nJfI+2e4exlbyifMt
bZn8dTu2zmI2lXO0obG+Pxpb7XQa7+cu2rKWDwbrRHPcUj6vwDG3GxarFMey
y5gyxFb/MotVFCvu66PvoK1LOQfKg+s0t9v0LVM+hzKM/XsdXRZ96uNn7out
1q7Yavb/GsdLpzP2xT7OacZ9jqbYem+vroW6xHxj3iPrcttzZ4hZY14f+e7V
4Lv39LmLcXj+K9YT+oZM+iOxVVOffe7AO85xi1L5nYhc8A3vRrfKt+pHhQvv
g111fWzfNlAVOMeltUb039EHV/WrHTvVEF7O4GWFaptFCoEbY3o+nOxsNu+m
uM2x9Tl0sfVAvw9qLKTqHdvTsK5gSoN8S/9O4R6q++sqNp2Dx7HVu6i+rq/r
Yc1G0/9dDbE1WcbWy9C+6noaAevB+dnVzaAUY+x7Nv8asJ/qaDZQ5pD4V7g+
iM/FffulclxjaYtVbL2YY+v8Xe6j2AptBr4Xy3WkOEymtVhjfe+2raY+m/k8
bx5bU7DP+9+1l7EHYTqsVU8LZaBZq+mhinAeH6o1OtXPbcTW6y22avM5K4OM
raEutm498xNj6+T/PbRyzbeGIg2x73ZBvorQ1dvKXg2kjgW+UOlQueexdXX/
LK+HfHcztjqa2GqDXAbYGVtN+VzHVoqBe8aJ2+Xbiq2rPrbNwbM8yOQCcSFt
YYyt2rETjQE13xlQbF3YhmPr83w8tnZTfVU4dtuOrbRGeJ3vt8dxuenTH1oT
ue0l77HaLQiH9AuMMeO8Svq2M+bxtieyw3mSch21bjcVEec39rSGgjFw5ntl
MPs+gfI97Ccsi0c9NvWp52kN5/n8r+lx/hVNzo3l81X7NtoY28fcxl3mgj0s
CtGzpv6JYtFpa034Fm8erQlDmUBcrivSWN+7baupT2PMatX6YzPe20FVNqCn
hSxO9fspV7Hitk6rfr7IOFcIytWGb+2MrfJ5tB43ptGQjbae+crYavL/GsdI
+ZT3LvWVr+nq7d5eeM04F6M4m1jYh1fYN9C+Dd39s7xu+e6R2CrXOK3bOimt
1dPe4HZlGwMb+VzVJ60JW7P401dQal/kbpdPrfc007XzNdv7PpbGQJcxMNK6
Le2baAr834F1CUp/9s1Pi3VEa8K+xWvCH6eRY1L7/W+40F6EuoO2TLGveJPv
zatWfdP1jm08KTf2HHUCQj+S6z/Ub26nQXtbcJ5A8wV6V140Gz7egEgSvIb2
RCSQ5Ldr+yqGIMrU3o+U9uTYEIlG/lYnPgSYPqWtoP4Pf8/VvowkikA0t6fU
aSDnLyWtYQUWnKwActk2Gsh8HxLMZ2FoK4vcpvHdu+Pn8n9PL0Jw41yuqVI6
OU4KH9uY9g9hW6P9ErN1ZOgKiIJ42CMTg3u+gJuUOEehfSwnONFeDRlwWhBx
DJmgNITcr0K/FSY3aDA/Fo6tMbbZjgOOGwx7ekz1vd+2i/oc9n69nxyI8d9q
X9g7WBgHZDJUjiiRviiwviuj22KfGdpwtWyZZwfz7CUVdPQdY3CFN4yXiain
/TVljHlIcllfRR6D56NtZNw2+NZWPnEuKIb6SuVAo4cmJxup/WpC2sj0zH+G
KsfxytsF/KzS75np5+n/y/L6VT2b/P+fIPEDSKWf5JDi72OsXNSb1l41pHhN
jP5X0pol1p8XpXi9/v57W2h9d8j3ux1iP9WqPVhbNgDaZqX2F9EenhTHUXLo
Nz6P6iU337vO57bfdSXtYcrU+n1ezvadrf3O1DZbrOOE2pt8n4Fj1XSWv7s+
luatAa3Vi1K1z0CtwVTNWL8xlG031b2XYhunvYz0mxOB6hobyNFfx/2KYtgr
2KPdaI8f+bMQEcaHq7Tz4x6Q+fOg92mv+S5nTafWzmhPsPhT/a+W+0gXy0s4
xneDz7H4K+hFAP5iHt6D8D1IN4aQej7TtxiGYb4zuv1NL6LGcZ0v5LtQ45zu
twfnWEkg5wFNhzMumpfF+O+Nb7e+nCaDMKS5VAt9T+sA6t8P3qpr+ETfYhiG
+bYM33g9WD/60BPoHJRvHEZ+GX0HTVVCWdWfYufPoG9ruU/S/I3tFp/vWwzD
MAzDMAzDMAzDMAzDMAzDMMwv4AX6R99KR4xhGIZhvgMv0D96vY4YwzAMw/xg
XqB/9GodMYZhGIb5Kay0n+iPW7pbRq2qLR0xjT5aSxpl7/Jc6rIuh3NSEqi6
HqrEhvM1gE3JOIZhGIb5lhi0nzb0rExaVVs6YkZ9tOGcTZla6d/0Lxox6L8w
DMMwzM9Dq/20pWel1ara0hHb0kejM+kdqSdR5zg/tpVOV4Npzy5nGIZhmB+E
QfvJqLlh0qra0hHb1keT16UUqxuc39rgiQr/myetDMMwzE/FoP1kjK1mraot
HbEtfTSpOYgxXeqc4HNty4ecQyvDMAzzY6nX2k+b+kdb+lhbOmJmfTTSBIy8
ZFgDbjA/dxoog044b2tiGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhmO9KC2Uagv3+N5y9BETdA/Q1iMSDy9/vYIUplO1X5/GeBvOXQF6UUBYZ
RGkF/ZHbuwoy/wpnv9h9S1sm4F6uENVH87oB2jkPLTi5+bH8L5IQEFoncPNn
U5inVUAuBBRFDkkQQtZ8OEmGYZg/mBYS6x28Yv63AvzTFeLmkx5ZZZA/mXaX
OWCnQ8DvSkizg7GVKAO4bsVWTf6Ed4WwOvqgBzQxWB+IrTKJ6PqC2NpC6rpT
PO1zB95d8aF8MQzD/Nn84tiK87XEsSF+cg7YJtbHY8lWbDXk79Niq5N9LLbG
r4itOExpGuiG/64xXltJ8+E0GYZh/lz2xNYWiv+fvfflcZ3p2j0ftuGGDQOj
QZGGGAwwNDQ0NPRhhv4CR7LOEEsjjQwGFCw0KjCgpNGRSpoBfpnPi/wwDzM0
NLxmVdlJnMROnO507+59r5+0dfedxOWqVX+uWqvKLlFCag2tBIS2fmMLnXr4
vQsh6gY68/G2t77PgN5k8PakT1V/da8BXa2ReXvEwsBUzTSeL6V/y9AalNEe
h0RASgmRh9gdMljJ60yBcO8hVZSuMZBZjNyc79/pAoVQ0FpBFSGlYZbusJK/
UVtjoemzY9rD6ZpGFigV5V3kyFfy3hlbLhtz1SiSApX90GprkFOeKlSUvySR
OJmcymrj3kYL5Lk6f045qsrpfkqRPQ4Ij9pKfrwsJaWnocieysb4O4M8eMOb
n6NqKhThDm9BibofUJcB9l6Kiyw3JZLc4LrmGIZhmGew2vobfjrqlfsnUvi/
z9rakBbF6qwlJg2QW0EbSIMPMbT9alCI9umoGaR2akVj7PUyvFy7XE1/Kbfk
t4bypHiIvVFb3f/Fu3O8uCZ9j/V0gxx+JE96Mej4znrrbf7upT2QD+xTWmPu
W9KuyR4X0OdxjmOSHen7UVs9a7PhfN+jzeuM/NGpnE1+9tVb0sNg5lPW2X7S
1g4yiiBOZq9JU1O4KQCV3wun8lcJDsc4dEv6fFFOsr0QMx1nGIZh3scjv7VB
fvAv4sNW3w5TgNQkB8QkJkOlkMU+Uisa5PuZ1T1Q19p1P/2b3N7V1sN4f5cs
6cmkIU1+gDe/wd311jVtXU7bJDt4qUZVke9JPm0ZxxAtbmhIE3d7ynuSQ9ZT
/q22BuKk+SrykB3vO/ToyM90PmjqkZ5ag9q62p/zgTF+67S1E/APZ1vYcijy
Ucd6JRt7IazZGkX+cTDqf0tpX2a1pfstZJ5hGIZ5ksfamh28G+3bp+MoPhjy
g2IFow060qwgs/FN+nv1fjPt6hs03f30b3J7V1tna6Jzbc3eqa0uf/fTrhLr
zz6KoA7ousGlZ0SG8BBBurD6uN56q60D6jxwtuynMo8+86it82nHWVtL+Ptr
baV61bPficppZ1ME9HlNf18vetN3De9gYhiG+TiP11vrzMYkTxFV8tV8ZNU0
Btu48J58Om2/r5D6AbLVePB4/Umn2so943M3/evcvkNbx5iw2hwTvs7fvbSH
SadPuSVfs76R2gZFdr5/L5Ip/TVtrcimEY5h8prmBlZb7fxljAmf7XuOCbco
gwDlLCac+eSf9qcf4kCa7vY/030DP4G62U/Wj3MAhmEY5gN0qOT4fOth4fnW
4PR86/GZUgMtS5Q0QJ9HYNLCLMFR7uo8ma35LTNUOZJMuj0840/vpT+7rtVu
X84uLGBa+2wuaeRvHymJRFsJxPvf8FKFuhufHbV7q0pXgAGtKlBIQ/qkoQu7
B8p+t+xvXueve5B2I3PkQo/7pMxS3huUSQrh9iYpCPptN7Tj/q9diIKucc/Q
7u0zxQrNMKAqEqSlcnunDOU9TgrIqnV1pgv6W49lEfEBuyAfY/CdQVlQvsmO
qqTfXPigNXKq43ayd0np3UgrzRP2QcnrrQzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMJ9E39bQIkWQ6qevHRqF
Mj7g11uAXEhIKSDKHLG3Q6gG+oVBsg9Qts+l25ocob2uezpLQGeQh3sE77r4
iqGBSn3sQonBffC+8vxxmhzeIUf9RbfrqhLRwUPefNENL27+uvr/o+X4dvSo
ygyFzBDFEmvW7UyBaH9ANjW2TgTYJ2bqP6sXva7PfpCh0cj8HSJ1N8f3+eL+
9n4GqGhPZe3/dEb+QgZ0bYfeJNhH6n1JmBhvfnnZ1wYDIdsx/abF8zXXQwT+
Nm0dNORV2+hlCP9V/bQt4J209b3l+dN0aJpPHLcW6kDH3ml8/WreXf/frBzf
ik4gcP1gQN/f150Lm/Utmu6xTt2rs1bKL9WpNvc+pq2f3d9eyNA2aLcUdaFv
MBuoXqWtpD1d7/5b1x+Z7G/VVppL5z5C8bna6p+0lblluQ5+nrZ+v3J8K2w/
2DhGvMdma3U2tBKxn6J6LrkP0RYf1da/jeW+wWzgRdpq+0EuzpraVwXC3X7s
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
2PE3lB+o4/pCW//JLNn3j2vrh+r2NQytRPyuPjLAZCl+QhhkTifSTxprjrC2
fj0dSv9wMbYOKjr7sV0FpUqk2Tiv6oyEyKkdKD2+J7+gv12FDWjsd8kBh7h0
Z6Leu6eLUewjSkdBa5pn2nNc22MGGmhlUBmFMitwfA1/qzPS/AAZXSPSALHt
QCu/7UyBcO8hJZ/AVAYyS5Drmn5XodIFkkSiPWXHoCzkmI9coB4GdLVG5u0R
C3t9Y09md7HzvZdCKok8DFGSs1WLCPu3+OyDNfYMHkqL7mPIPrdhqR61suXw
kQoJdyxPX0Hac9g12VSQ7dxFC/f7dwOZeFQ3VM5ZOarqWMYYebU2KlJ6lLak
e2glIPRoqK6SpHM7BFRueV1nfQND9bT3cyqPQX0878+OvwF9pm9t2VcChbD3
KMkOZmUuPtPWjuzsv01aYuNjMbWLBJLuZ6hO84TGyWO2burpNmXXRvYHJEK5
c4FlkSE/NoqVtmL9BkW/t2U0MkUm6YtGQ0hNeTBQ1N7L5qquW43Ut3Yz7jea
xsaYOsIxSzbmn5eUhzJDWlDalI/yeuxcsa/T1nRqQzbdckzXtq2E6ioqqJ2U
CYLpjOJWlxDUH7WWKEU12rw1yIMd/KJ1dm1UMovD38nfnbqdMzTKld/mU9mx
QNg1jupc34tteqsNybel/hvsqc3bOmn6sW1I4cYcowWSTK/ov3HnPl+0OxrD
pKQ6z0tUTUV5ElT2LWdNuoKg1na8ObfDlvrl+fzmx9ebLIR3oHHLNNT39XJM
bzpTcz0P2vVxZevpGEB+0AZtHRXUX2w/UPZ8a9bWr2VQiKxe0Tgvpf0nqL5+
n+bNNelYQ35sGNr2SmO7rKgZeDhkUx3qeLY2ZNfOfLjufITajH9YqlODeB+f
1xrbkup+PDPVpnk4+r4Vzevp72P6Mnwb1+a6Bi60tPpb+xW1OzHlrc5wOOWj
hwj88ZxYGjlEMJ0Zi/HcusAVwN7Lu/LnKM+kiWVrh8Ua41A4i28O9u9jmawt
Ditnps/9tg4yiiC683d5kE7nwy7cj8Y+73gG/GSP8DhJvyr/nIbGg1ideh0M
zU2OXVnH3hgTXsxqBi+69VtdHoZjHryxzntqS0F+GjvqjNrVw/Jf+2lkw4N3
msO3hY9Q2PKt1dM1Nj/zs+prmiMFo33X2gqlFZ8cHZpL0rzDnVl4zBLp7HjW
4WUsuxcBdvExlkd15R3rxSA5tW1z319YsG8vA7xFS+mO9tjbMgwtatKcoaK5
RHrWiV7FCMv2lD//ZKOKdPmY9zv5W6vbBdrSh3f6ktoUzavHdfN7bfoJG87K
TT9Ekh7jYYObIy1nqkB00ehI20hX3cxNRvAojZ7GpCCS22KwNc072p76cjDZ
oaN2GGBzWIHmc3U75rmm+YdYXQMmvzISy3nqJcLj2GXHa+/cx1btN5jRzsNC
GszXUCXYh/N21qLwDsiOlWd9OBGu6meT+4hPAkn9wb+tv2GxOV31HbfGe/Sf
B/RtTfNTGtPIj9mTD328twxnecO939qhdKZtdg/FKdY1082ONH1n58c0T6/I
T6D5XZQZrGrr4TqWOdMJk2AXrPSPtWto3nI59yD7hjvEZuV+duyb3cPq90kX
l3RwLDzZ9nLO09G4eJgufJe2XuTBc3UyqBBv5IOZarSlziMki8G5e9pK3x3G
tWiXT6sP9rvVerrmtt6qZDelv9JWeo3ksMMhsGf1jmcIWs3ydnv4UYJCt1O7
uc23t6hd1ViGSbuSmzZz377r6Y71No8X27KFctbBGppD+uWkJeGKtt7J30rd
LmHzEohz/dp415uNd91t01tteD0+WL3eY+fRHDG7s/eH5kzhxWSgQ3uaXnuz
sWrMV1OGiMSDHmvnjP6kZwNpII1x9u/ezmviNf/5Kgk3Pzvep6WyhFcx4ApZ
mK/uUxk6mksZSsPG4w7n9bpV+7mxaD6uW01mbf1Kmtyb1Q3G+c0uno0FNE8L
w9kctJrpJ+lwEOHkDtE44a/4TbcsaKs3amtvUvhhCbdFubFjz1xbLzVi/bdX
mmG19bRHY66tAsF+aV1n9pt+8pFv8uwK/UFtJc3YX49DbxiX4BbuN62HLY59
d7Q1O3g32rpPt2nrYUqzaU7O5GIexrF16f53yo8FbfWWtHWtnq5Z0NaUtJUa
8Gpb6ek7G1utFMqE+gMZo+/sekOHWpdIAw+JG5MX8r2igVURI7OxcfJVcnXH
yVmw7710bb2F8tzCzLW22vS8Ytzvf53OYUP+7rWvK9a19V6b3mpDO68c63to
7F63HrZK+sZAFuR/BsVirPpWW09fIPWPflyHbipyQ3ZY22twyr2OXZtw2D52
HOPoXrF47MDaPJsLf7WHiK/b8h1t7RTpeQzpNvwZZ6O5ti7az45FF+vmrK1f
i42N7pHMK3mqk/O6yRgP7hoJaSvG7lU6ztVaG1tRNH+j7xrb1wJEtp+3Cmpa
DFv2Wd2NXEzYHP+X+mPgYh3WL97h2HwHM+5h7ux61I223vvtRm09xnhOafao
q9b95nR9W01nqo9ad9k+Z2PFYH2AWZx7qFEtxoDm40uL8iLGZPc5URr9yv3e
pa32K3/2nIuN3/nIprXZu9p68vcHt1Z9Nw9ufj/rv5vKv1FbV+vpmim2ccrE
MSa83lb+g3zg81IXjcGJxP+VZ+d4WlMgcTfeqgvkYxVi297nBfs+o60D9Vdv
tnfQxj2DySGyWndKZ9qf+DB/T2qrP4tnnWPC99r0VhueY8d9Zdy6VHaqfKrL
JMFiS7+KCdu1A4/+f2hofAknf94omH60w6XGDaS5/Y0fauOux/mLW6OY7H+p
yyvXViUK2Yyf2zVou6mEfN8kud6LTZ+txITtuHo43sj6PnbdvDVur8aq/exY
dJpLgGPCX8nQwghqd7/3iIoxDmb3tdh9Jb9pfFTHMbHXyNISSlVjrEzFpJ9T
C6D5VJYJ+q52baLXGZJCUfuZ9jTYObS/9jyO1daA5sx2v4hGmefQ7XRLQ+lQ
utrGFQ3lKUpRUpr/NtRvdm/wM4njtpvV31aC0v8NL1Wou/G5vbd9hJIubG06
+zcEmR73GnUGRU5ldPt8NP1+MlGVU9rS7evopucyD7/Jh7HPAY+dBbVKyYYH
JKqZ9psI96yo3Ztir2tvyk3XyMRdE5fn+7s9OnbfTFlMz+Ut3M/uxbHl2IUo
qGN11G8jKqOf2jXxGir18JvmK2JxH1kLXVIZbb5kSTYa45zdyU5i3Fe1cJ2k
cazUapx7U7u5zYOtE+XKYscSt5fL7mFRK+U/2kxa/5BsH+7I3y+oTs/fxYJs
bvfj2O9oPu/ytlJPl4zrrVEx7k2yez+KcSBdbSsdtVv7e7snzNrGzgurnPw6
afc9abcnp+qv6nrK91uQQTedq9PDsUxWJ7MAnh8gII0Jw9DtR1qOZ1zZ9066
XauRB29kj/Nz5y6uKQsqh93jI1FOMe2pwMhT+q3bV2fbPGlfadvySv4e1O01
bl0hGfcXacpDJmZlXGvTm21I2lUmSMm3VrbyO4k0Ll3dGbsXb+pvt5CmzPcy
2f5IaZi6RVVmZCd93mc5qEuNs/rz5s/mb8cqoraSK2ff5BT/udLlpWvtHjka
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
8XoswzDMd+Xf/xX/E2nr4b/+Hdpq9yZtoTcFylc8UPNZ3D271b6z8i86F5Bh
GOZvo/1f8T+Ttv4v/9vfMVDrotzwDsAGRSq++fMtd94bYd+n4F+9s5FhGIb5
Prw3JtwIxP4BXixQ2/NIX/ks6gfS1kXxWFvrpfcX9jBZCO8QIDMNaqU/7z29
G8u3dHZrV0mIxMMuzCGkYX1lGIb5jrxTW9u6Gdf7Oo2iWFobHNCoO2e30j+5
EpN9nPY6W7S1FxHi6/ciDqSn7Zhv+z5b8YkvkNhcvpWzW+15NDG/BJBhGOb7
8qG9TB0qXX1SbPUy7b7KEMS3ZwJcnr9O/mgQIM3vn7/eFCHWjiHtGw3dbN8l
1Opi/ayfQt3R+Q3lWztfzue1VoZhmG/Ne7V1aEkb6s/R1aW0l85fW2CL37qm
rX1jYL7iXJmt5VvS1kEh8sbzAzCw78owDPMt6Uqnrd5T2tpC5SWOy4StkgvP
sgyo5R2fLl+LCS+nvelcdLw/JtxXJQrZTGe2VpCqhfURtT23W0vkSfmis9Kf
KN9STJg+82JjM+n0mdWVYRjmG0J+UPjrX9hn25WjNRKmJY1IfRy8AKl+nfe6
nPbGc9GxfS9TNN/LNNRQivzIukR4OMCPSnfeTSdjJO78twpp/Jp9xc+Ub/Hs
1l4hSwWMPUOVH3BlGIb5ptC47v/60Bmun850Lnq74fBUU4oNe2dr8kMfa6VJ
pnNcmwJxTtrbfZKXuFi+73R2K8MwDPMsg47x9uuAJ1zXr6XXyLMS6oUvUepU
jvJBeXudI1cGuiT/NRNY2Bb1GpbK91PPbmUYhmEmevLR9vi9T196zvn3hsos
5EvOOn89fHYrwzDM30EHnXnY+/k/Sl83viLxa+GzWxmGYf4q+qbBZy0rMgzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDfB0DWiMhpUCZxoiLCv0zl3cVlFKr/6rO/qREdPCQN59VhgWa
HN4hR/2Jt+h0jqwUSMMUeph9LgLsE4Nh/dJvydflu0dVZihkhiiW6O7l6aNt
Z2ggsgKyiBGWn9kAOypThMMTba41OcJ9gPLaAJRnlfrYhXKqC4PE/q59ZX7f
SV9DJp5rJ09chFrE8PYJnrnqe0FtVpSQWkPLEsIsjJJfMeZ8eCx9vp0y76SR
KM1xNO0ggh0itV1de5EgUQ36wf0P/F8BhL186FDLGIkY09Kxh+xLK7ND09wb
tc+0Ur6jnTXI/Ria/hr6K3v1LZpui0L1UNI8fefXsHDvzfn+IJ1A4HRjQN9f
3a+WUO3lRx9pO4OKEBQ2wR7Xt3o9GrGXPdGWeupv/q22WtoC3klbB3RN+9yc
9zOpUnhPaau7CKn3g7WVyhyeBK1DGcUX8+nj51vHnI/w8bH02XbKvIdBhfjt
i5Pv0GQH7JJq8/UtzePaU2IS4e8Q8tTmGmg9fvv12rqNoZWI/RTbS3ykRvau
6850msaoWH8ghZ95b6sbfqRuPyd/rQwDFFdz8o+0nV6GCMTnj3cjr9VW/6St
34x3aWv9o7W1Sg+IZmJqkgP+VPdhbf0p9OhOE+IBOnqD/0Twqe+6c/+/0Vaa
b3dnvzUWGqYykFmM/OgrDy1UMcZaZJFDNpejydAopP4Ofkr+jNJQwsZhZ3Hr
voIsJWm4/a6EctcPqEWE/Vs89uVWuzSC3MAYAy1SxEVtc4fGFAj2Ifnu9F2z
4Bkspt+jVhmCnY9USJgLc1F5Eg9v07jYUfrh3kOqxnuPZaf79A1MSXn0c2j6
vD76i51BWdj7KRS5QD3Y7Nt7BciUgkgDxIrqzAgIypMxGkVSjBq/cK3LkSpQ
yNH2WtfkKy7d+zLfbq1AlxBkc60lSjHZfNWWtww2JiKUs521ocsP6acuQuwP
CQTlqZm3lVoj8/bUTijtqjnV8WrboWsaWaC0eaR2kesrkWoNRHzAPiogFZV7
tUwGeUBtbPJvG5Wc45cPymvbZ0E2V9qugWTwT2PWSt76GqIoXHtXSiLxHmtr
X1Eb2u3H8fRBfvpKoCBbaVUiL8ytr2vtT22xMgplVsB0x2a30k4nOk1tyNUl
lZPq73CjrVOscR+hUOPviiyfxSDm2kr9R4/1qYoMZdWf8mbjzbuopPxRPuie
SSJPc/eHZbO5UCmCg4ewqNBWlI924UdPM0CFO8yLXGd7mrP1F7+5GHOGmsYL
5fqXkSkyeVvJnc2f7ZOSxjTR3PahlTTW+8OKXXGvnS71U9t2Yxx+U19Uzdgf
fh+Q2DbcaSSHPUKx3OeZFTqB0CNf7L1Gu9HWMzrenf2HOjv5TE3un2PQvUQU
ipv1t7b04blxz93EzRnHazrIKMLZLalpjEwxNrXLGFQvAuzonuOdDM3bjj6n
ofFtzf+8l/6defhFPG+97O7vaD75bcmPCU9j7aCTKZ45QIZvY5k7autdiyLO
cYpQUX+p1q5txjF6LHeFhMY+NSzd+zLfQ0V6nlbnMVvZ9cr2gS1n9NQHw+KU
R3QlQvJV++k+yz6ZLeftWtKa/Qbyn/zT+jDZJLyN01m/1Z+M8qhM/qmNkZ22
tJ3BjG3glCC1/8M4Zi3nrYeK/JnPQZ/72/zWua+ymp9eIQrO7aLOaD52XTE6
dro4dpFL/3O1nTY5/EietGygNJbXWykv+1kdtCWN4cf8zPrLzE4YKM/eOc+u
De6P7WlsD+OUZ0PZ7Fy5HvPfV6S/14sLU5qNnWsW6/9kfd0ye7dWNg/n1dlh
wQeZjTnU/+LT2lpFmnYzqqGwMYv2mP7CuvtKGqv1tGbXO+10vZ/atnpsc3at
8NgvafxVy/MaZo2W5owp1EfCZ3e19YD02Dbtmj/VH7VyZDQHiiXNo6uK5qoC
KfkY17GKjrR1Pke0a2hv9nqaC/iHeWxjnF/Gxv59qX12jPUWx8472vpE+hfc
jItLZcetvlG79nfWh66cPQzNL6PMYBxjDshmmtOUNL7ufYQJ+fp1v3ptkx9m
5Z6xoq3HfFfJDuG8IpsMB7908551W56xdbSL55+SnXdT23haW5ftZyiPXqrH
tkNz9TKOIa6KOtfWR2Va1da18poEu0DOxhk7no3tZTFv/1YI38Y1+inlzTHh
C21dyY9d33nzc/Jbxjag8wjJzd6JAX1bk09o/WnSyFlsfs3ON21oNSZ83Zca
5IfDVJ+X/WWg+WFtKA/WXz4k52ustgbiZFM3vjdbyzbR1ZRu+0K/asFvTffw
b9Ya5vMH69/tcAhipKVZ3q/X01yg0qSZGrl/uN2ftJLG6niCFbveaaf3+mlP
33m20fXkH6fTvoWBbG9eZ9m/nwFVeY7fDMM7bXdXW2drBDNtzTfseVvXVtKT
/bX2vU3rILfaujx20lz7MI4HQ9Oc147HG29O/4I74+K1th4mfWvo3m6Pz35J
563m+DgPbzbWPoxxZZFRH4og/3P5Wrt+vqatF/e+yre51iH7e69w9rmnQ6cc
0lh422cDyP7WPpflnNpDb/3z8dM1+1mtvIzL3TLX1qfKdNjQduyYdVGO85i1
mDfyJcLda7R1KT9jv7i/CNgb8qfDEnY6ZucW3oW2Ltv5pg09o63egrZ2CrEf
Q7bDdM2ltp7jLHNtfVw2h9XV6pW6OlIle0Rqtt4a7xfWW+fa2o1rEJVCmXij
Rl3QQlCfdnFWO65EC+PgShqr48maXe+007v9tB9/Z9edKtL5OCicbrO0bseu
3anTwld72n/0NE9r6xQTlrN1nbq+meNZbfVPA9A8JtyivIil2P1FNHb149/b
tPUcx+nJv7hs3tvTv7xso7bav6f9spWxvaAbY0PHbNr1k6rFrbY2KDJ1Gn/s
Xu2sXrnW+qfzOHtbTePq9b0v8z1Qf/Rmz+P00s5bmwe2nGHj+/481le6vcHd
gn3ODGdbUT6rB9o6TGP8KZ1mKttFNsJT7O5emezYfSqTnePsNrSdgcYhfz0m
fJu3MSZ8HkPfGRNey48dC/3ZXHCoUV3sX7Bj+Nn/GkyMHdmys2vuuN9O/Uht
jgmfvqG5abAQE+7KAIejEazN7Np2a8Z9Cyva+rhscPsNikKjHYUGRuoFf3FA
LQvkeb7ybykmPLadID/efXn9YV7GQWU4/dyOMYm8jKOSTY8xEzfO+KStNPaZ
2Rr3Whpr9bRq13+vt9O7/ZTuJsM9vNy4cULHPsLy5z1b+MeoqY5//8bb29v4
j/4Op/mZ1b1g474m+4ysyGkO9C/yDXIBOYvJdJWgPvcbXqpQdw1U5uNtH6F0
g2cLRW3a7fmweyAW9hNZbT0kpP/arvsXyER9bqfH/Ts0PqiymPZC2b1G6bj+
rhryb6nPhTu8BRmlb58NSqjM9J0c02nKBKnQUJebku6nL8f1/bic78fBuFdk
Kp+ggf5R2WWSoNQK5piIzWteujiRJpvY5SO7zyTavcHP5KQ3Dc1jUwjSREPX
CjGNIQvXuj1JisaMaU/EOVZ2de+rfJ/34tg9JRLlMSb1wJZz+nrce2IM5bEQ
cFsrjvfZhSjU7TVDlSPJ7H6syt3vvv1sHm3Z9LjH5joOOMurPP1+oUwuswZ5
WlAaldtDE+1p/lZSHh6Ud6Ay5qVyc3utcwRvnvtuWMtbX6Gk/uHqgj5PPbtP
T121IZrfZsFYTtNNNqD6T0k3HuTHrTMW0947VV3GYVwxM7Iv3d/GVanPZlFK
9qjw7wd2HvfDmTGWXFA/P0QXe2VGrLYGyNW4x66kfj1O02f90eaT/KvUrmXo
yqUn0pj6NLXXftY2yF7uWU5b7my0z/2ydajovo3bl0Z+NmmJvC78h7DPZFP/
d+NATvm7Vu3LMafXGaJCufUA+zysutHrBoL6X+H2lZFNaQyKqV2Y2eR+WEjj
bn9Ys+twr52u9NNjqRSNjdMkYtAp0ieez2S+P9cxYYZhviPkHx0+9lwawzBf
B2srw/wE7u25ZxjmOzG0Glnwhl2QYylkyzDMd8C+EzBeXR9gGIZhGIZhGIZh
GIZh/lbsO7fsmTrnf6r+qne5MgzDMAzDMAzDMMxWBlRZdHOeyVbWzkX9SH5U
tH/q7Lxn6e27P7/svBWGYRjmH0cjEe7ecPEqre0Xr5+L+gGGtpne1/Lohxry
WQ0eahT+G/bf8RA9hmEY5i+gdWdYyeg3Avkebfz4uajvp0eV+wiffJa2UQqm
DPD2pw50ZBiGYf5qOqPcO7PsORHevZfwP30uqkv9wRmRK+dzdpr0+m16J/H0
HN4+ce8vs+/5yqfzf4aW8pQc3PvEjKm2+bmtHt9npmO8zc7vYBiGYZiXQHqp
pvds2ncp7ZI17/Od56I61s+IvHs+5+w8FPfe64N3Wg9ui7Ov+tw7oDoYNem3
PVPlkOOdS8wMwzAMs8CAKk+QT8/eCPL/foVq+cyE956L6lg/I/Lh+ZwnbaV7
HM5nfXX2XOzyPCfYqq09+dhpMT1vRP70/u1evhmGYRjmOYZGQc2dtirFzitv
zuFwvPdcVMf6GZEPz+eca6u3rK3Whx21tUNzfYbVRYFrqPlZfINGtHK+HsMw
DMM8zdBAqfrSR20LePsUyztn33kuqmP9jMiHZ45u0Nb+9HcNU60JpT0DUl3F
fynNvYelY8gZhmEY5hn6WiIL9vDS2VmY9oxOe8bjL/ve7mrhfGI8fy7qibUz
It2N7545ugsKVN35nMVYUN7seY/2u3A6C6DXyJLcnYF6fc72mO8KZeJj7+ez
76c9WG+/3VmT7vNeIT7MziNmGIZhmG8LnxHJMAzDMK+Fz4hkGIZhmNfBZ0Qy
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDPO3M6DREkopaFkg
zTW6Z65uFIr4gF+7ELkQEGWJIk+RZBLN8Ir89ahlAm+fwLwiuT9Cj6rMUMgM
USyfsu9WOlMg2h+Q1bCVApX62IUSL6mCI00O75CjfmWaK7QmR7gPUD4yVmdQ
FhK6qlCpAoXZcPLgV5TD1kFGdRCpD9ZBC019Shkqn5HUx+rX1inDMJ9DVyL0
juNMi8J7Q2yeTMPEePPLC83oqwy+X6B+z0BQk9a38w8qpN4P1tZOIHA6N6Dv
P29k1LE3aqulLeC9Wluphptm28yglfKD2tVDBP5DbdWxj7wZ/x6o3Yhqy6m+
28vxDDdlpjrwP6itvQwRiCmvfQUhWVsZ5mfQoTbNdM54g/ywP4/PW1nQVusP
63h3Hhe2QvP9MgxQNPMP65+trdMY+9lca6v/cm3dxtBKxH5KM6KPsEVbB8jw
sf5+BYtlfkEddKWPSLGaMszPZUCrUsR5hS0z/wsWtZVGR+HjdyDH9GjOLUsJ
rTWUKKEWA8YDuloj8/aIhYGpjppvtTVCYQwqo5AnKfTxZkMLVZSQlK4scsjF
dHtUUkBpSlMLJJl2411XKejKQMscmWjGMZC0XSYedlEBY+NwukCSSFSVzY+B
zGLk1fEeAxpZoFQaWuTI9cIgT+npIsT+kJDPocc4+aItOhj7Oy+FVBJ5GKJs
l0xE6anRDmVGeZzdcqu2tjpDsD8gEYpsoshuGfJ5Qov5G1CLCPu32M1xbAw6
3HtIKS/GTHZx8VjyCem7YE/5p89N06/a/7aaaoiicHWpyAaJN9PNY+yX8lvk
wsVDuorSorlgRJ9L8hnL+IBdYqafr+XvshxkDKQ+zQHz8XdaUB8ozr5hp6le
S7JTmSEtqL2QrcrmOuNLZZ7qIMgpz+d2dKrShfLcVHVLv4n2OCTClU/kIXaH
7OQbL+btf4zrAW9T3fe1QHzwnG8/NNamO7IX2bdMEKRm/A3ZsRDUhlWJvDDP
93+GYVYgXa1Im0gfMupbT7sBK9o6qBC/Djl5wx1kFOHswtbIgxRmcYC1voh3
ivMdf5/uz5+1hY9QTJ52buf102jQS0ShuM1/T2PwNI44f5rGWxf/tn5R635A
PtJsbc/GU/dHH8Tm5w3h8R5VCm8avwf620+O6VJ6YQy9KGZznbtnC4N4N+ap
b2p0S2npmMba6Z6zvIxfbfVbbZn2SE9OVk3zmWDK0738XcbmL+ISdQYv1tM3
hsbwmQ+3aP9reqjIn8VMyJ7+UVtbqp/wVD+DJl0oWhz9Vvfnoj3W8ndZjl4E
2NF3/ZT3+JR3Ksf+WKf28+xOnPuqzC7bUzsaJ22uXY95XSvPLdZvDeVR7fQs
D3fyNq0HHK9SEbWLWd/Z2/ZDc9LazgF6hSiwffRopgDZxwIODMPcMFA/fEcc
947f+isQ6DsB/zAfl+g+4W5lXXdFWw80jkz/19FY6LuBqUFGfkssyY+ze1mM
QEr+5u34Z/Vij50XIs4ETktyPfkbNKdQ5Cfl/uF8Tzs22XxP/6uiw3nMt2N0
NObEJDt4qR7vTT5tGccQ7UKR5jp31xY0Rh4exb4H9G1N/p/1lWPsZ7Hm57T1
0sYVlcXZ9G7+6ittPZz12e4POq0tXuvMiv0vsqQQvp3r+CIm3JXwd9YnrJyt
jcoQZQaPtXUtf5flsGua3jkRyvvxu2psd5N+JXfrZkVbL9rRpHGr5bllXVvv
5G2q+yVtten5syC6nf+++TlMNeZF5xESxZ4rw3yU3mQIs3McqMn2+BU+uf9i
Zb3VxHa8bsexZH89Xr8h1lhgNu73DcYtJ3YsXNbW/HCtw0tJ9ujsFL0xkEVE
411BngP5DjQuJy6OO7jxZ66ta2PTXFutHgViwzh0oa33bLEwPl/RG/KVwxK1
vW2TOb048iFtTamu7Jzqbv6utXV2vyttjQ9jOYamQbto/+sskbbu1rRVINgv
2eWRtq7l71Zb/UVtpf8rYmRiivmre3POqzLbj9ba0Wp5blnX1jt5u7jvcKOt
5/Ss2SO8RYsdkWGYD9CrBNHJ2bL98G3Uw2dY0ta2REjz4XEdqUU5j7naGKRP
4+iiLA3nMbGlufRdbZ1iwrOxoqvr25gwjWXZqUxUxiSBprH2cMoz5c8nraFr
jV2T26itwzSWn/SrqUbNu+ZC5+7ZYtTW9bjjGFc4ysdAdrfPeHTGuGue09aZ
L34RE76Xv63aeo659uTPN0v2v8nTGBM+6/08JtyNMfv2/Nu6avH52kr+diFo
brBoxCuuyuyKsNaO1spzy7q23skbzY+CUJz3J3qHVW11MWF/NpcaalSveXiO
Yf7hdG6fiRASUmRIZs+3Wt0KHujs0Gi3h8Q+31pIu6fEplUgy+Wlzhz3bpAO
qLJY2XM0pVnl7vlYuweks+OOojHz9wGxoP9vDfJwh12Yw7istVB5Pu4nss/o
Ngvi1kmkcemegTSK8qfsvqUGgsb4wu0LomvLBHEuYP5HA535eLPloRt0VYlo
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
Z9dmDsfOa+1snydqDf3DJm09t4l5TPh+v9+qrZe2blBk6tT+e5HMxgGap8fZ
B2O2rK2vpG8UymiPX4cEYno+1faH4NHDV+S3GrfvQKFIs4t94n097rMwRkEU
U3yJfq/JP36jcUzQwNNVdv+O3cujUHfjs4v2u7Jam1O1kNTfS7qfsePI0I7p
7UIU1Am6yu4NeoOfje8t6Cu7x2PaR6Cq5Tm4fa7X7h9xcUQBoaj8nUER7vAW
ZNA0KbfP7h1+H5DI2u0zEpSHQtk9G1T2MqH5sqD8wMXYS/rb7gGyNkk9u8dh
eofCcZ8NfafK4nI/B433SX7qZEiyan1+MRrerbdGhRrTKzIq/3nc+bjtr+y8
ZKO1nKkE6WmhkfRNkeZY2z206zIN2Telsig7yD2ob2vjIi9dnFNTu6yXmtFi
WWgOUdB9SuX2shhVIE6ojqr/POU/FhW61j73vKP5ZA7dUv7tPqffdj+Yzb/d
y5QjF2N/sPlds9Fa/dhY9O99THY/23eg3+Y2X7at6RzBm+fsZb+/bd/9KU+J
MGjXJ6nLbfj/eaKeq5zaqXR7yrpZPV/YKcxHbbL76PJ83OelqM02a7V93A9m
91JJlKVxGjy0GnnwRukVUNOEZWy/VPepHuNMOoXvj35ZGIYIE0lt4on2R35r
amOs2u5n0xBpjIzqqO5tmwvGvmGWxyWrrYdk3AOmKf+ZmLXnlX5/kf8H/eLS
1g3KJIVw++6o/VAez26rRpqu7zN8zMf7K8P8bJbWu74J5Gtld/YRM8zLsXPT
q/mo9Xnjj23q2X77q5jwn2KguVe+vgGSYZiHfGNthXUNc4hvmjfm/2/vfv1U
VcI4jscbN564caPReKLRaDQSifwJRqLRaCQSiURfNxGJRiLxufPMgMLKIOqu
++N+3u2c3VUYcYYZ4Pn+RmYeHpk5Z25m7nUtlZk376JIvJcUP9j3GFu1LtP+
8bpMwP+YfTb19eW83vzt6HOS6TfdNvxaVSkHvRe5OD5t3UTXqyNdr160699f
QevOUk8YAAAAAAAAAIDf4UrWFPlFHp28qXeZVnptdfXWfZb1C3xStpt9hmZi
XYFB1UH2wdzWwnuuSvJtJPE+ktX6hvtHnnn8t89+6PXHJO49owXgB7gpa4r8
omHv8qYu6v7OP3BsnZIf97wsv4f3ranZ8FRaA6qprVFVt7TI847/dH2uY1Kb
7+iOG12An+P/ljX1LGP1kx40JT/umVl+P3Jsbc4zvi9Xr/4n5hsCuDVr6l1+
UX2QZOfqCmX7UKL9ZUcwKYNN6w0l7r22USxZU2Mw3Szk9cWcu+cuj0Lr0s/W
u8vnQo65rUn1Mgvd31Y6757J0uZEHSXbuWysVOvUNEXVXD2gJh+qqRXkWy+d
sg//XuRl3TC2mnbcmf22mWLhxmzjXqJNaudUF5lnvpy+3gZ/UpZfkcpun9qs
qmQTShvNpvu23rlsL5dz17zf4OfafGTm/WOb0ZZIEi87GRNDGWXaDlqryByn
SSFFEri6M9oex1SC2Zssd8O5WYNZcLpdmuOmNcx8zxlNyDvT2kzr2T/y1uQI
1gfTvm8LicyOXrZnm3UXyF6/L833yvf8ptb80f1axa5W+NYc+6d6pp7jpRw5
pm2m4avZtiSRXbgw7WirBU3O1ANwq9uypnrrxWnQfEfd/yee7+bVDLZ0bftW
28X15jClrYHflm0sTf/ovayn9UNPuZhmHE5cjZfC9KHn2i61ZKZfaUsT6lg9
tQ7ylBy53vh5w9jafe0yXpxqrnozz4ayhN77hCy/3Iybp3mUGWfT09jqybnz
fa6mrbXe8im+xvxee73Vn1FWubrDtg217nB7fJrPNPGcC1zJ6vPP4afnnem2
z9sgorr5Dnjb8zLrbumtV/DufTvt5ztelP+Y1tf742rkHl1t/smZegDucEvW
VPOztm/Rvmv2KrPFWsKmbuigqxlsWoflYGuApubc/q2zVmfzkezGmbmGpxZo
+xo6fgU6Zyqzpt/X/I5uv9jUDW06n5syBibkyN09tu7OfWW3Zrg38+yRsfWB
LD8d9+Zmbv53FUiclp1982UMDn+uxWbWybyS3rgxllFWJSuZayNWZn4crly2
qxnP0swzQt6Q1ffuLyfnndla/E0+a52n9rzF355j36vLbfCOrZ7jRfmP6SYb
ovM9n5qpB+Aet2RNtT9rx9ajXa8r80S2wdz1e4PGM9iqzJw/L7cuc6SIbH9w
3jzNrg5M/5nK1dsktf8x86E8bcd5zZ2cX4ytb+EdY+uEHLl7x1atPR+sYzPn
SSSOtm7dUkYyz4Zy+qb8zoNZfpWGl9VHOaRbCc28MWgmOb529H2uReQfW8cy
yux8cB7Zmve5Oa9bL2Kb1ekZWm/K6rv424l5Z27z57JOSnMO4ebb/vYc+15d
bIF3bPUdL2p8bO2fZ07N1ANwj9uyprp9S51Ep/VVu94V7IfX5mQsg03nCK9y
upSUre01oqNeJ2xfOZyZuWY2Mu61zDxVrx2nnZ4w+ttkRbn3yoK/EjWLuJk5
Hzgt52l/uBy/h/ZajtzdY2u+NWP20DzRk3k2lNN30RQfn+WXbaLzOFbEEjSL
9cP9+cjnateEk+E14ZGMMl0X1uvb801mX1/vo11uR46LG7L6LppvYt6Z+y9z
3qC5oW0beNvzg8ZWz/Gi/Mf05dg6OVMPwF2mZ03184sqc26vGWm6npTut5Ic
RkamkQy2KovMv3f2Ob4020u0CmWb5Odx2vQl24mBhqX2ib3NKCXdmm3L3DZu
k/Napt57Epq5id6Do+u887eFbNLyrn3o5U3V/Uwr+7PZH3/t4NL83MyJbeax
ZmuZ/XfPRPkyz97lxw23xIdn+eWbtUR7l2mm9wVp9z6Wc+f/XGsp9XnNfebW
i2Mzv5zp33Tvr+lnlLWqTv5dnYYSDqxdd41m9WlbJMNZW5Pyzk6/XUi87j/z
OpgdN5rh1ueeif4ji00qxdE9A/wyC8z4XY0cL/5j2r7eq37eeznHP3qOr2b9
hzubgN+odmuQcuUeJquSo70X9mivf/6s2zFMvxzE/f0zc6pVOPFkAh/vi/PO
xnG8AHhELuEikrww5/3XnpkvNrIIUnvdd/R2p2+pNtPy0M6fyqqWutLnQ0Jq
8Hypr807G8fxAuBBVSnF0PObg79amL7mk7fnM9WVlIdc8kPhvWaNJ/uCvLPJ
OF4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4GH/
Afb/Vmk=
    "], {{0, 419.1976002999625}, {353.2058492688414, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{353.2058492688414, 419.1976002999625},
  PlotRange->{{0, 353.2058492688414}, {0, 419.1976002999625}}]], "Input",Expre\
ssionUUID->"f541349a-83ac-46c7-8fe0-b2c791cda196"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"basic", " ", "commands"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"xComponent", "[", 
      RowBox[{"t_", ",", "point_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"point", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lightsource", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"point", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", "t"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yComponent", "[", 
      RowBox[{"t_", ",", "point_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"point", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lightsource", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"point", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", "t"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zComponent", "[", 
      RowBox[{"t_", ",", "point_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"point", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lightsource", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "-", 
         RowBox[{"point", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "*", "t"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"lightPath", "[", 
      RowBox[{"t_", ",", "point_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xComponent", "[", 
        RowBox[{"t", ",", "point"}], "]"}], ",", 
       RowBox[{"yComponent", "[", 
        RowBox[{"t", ",", "point"}], "]"}], ",", 
       RowBox[{"zComponent", "[", 
        RowBox[{"t", ",", "point"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"warnigndisplayed", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"selectedPlane", "=", "\"\<XY\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"lightsource", " ", "=", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Function", " ", "finding", " ", "intesection", " ", "points", " ", 
          "of", " ", "lines", " ", "going", " ", "from", " ", "lightsource", 
          " ", "throug", " ", "figure", " ", "points", " ", "onto", " ", 
          "selected", " ", "plane"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"intersectionPoints", "[", 
          RowBox[{"figure_", ",", "intersectingplane_"}], "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"len", ",", "i", ",", "addCastedPoint", ",", 
             RowBox[{"solution", "=", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"properDisplay", "=", "True"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"len", "=", 
             RowBox[{"Length", "[", "figure", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "Defining", " ", "internal", " ", "funcitons", " ", 
              "appropriatly"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"Switch", "[", 
             RowBox[{
             "intersectingplane", ",", "\[IndentingNewLine]", "\"\<XY\>\"", 
              ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"addCastedPoint", "[", "point_", "]"}], ":=", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "tVal", "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"point", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "!=", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sign", "[", 
                    RowBox[{"point", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}], "==", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"lightsource", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "&&", " ", 
                    RowBox[{
                    RowBox[{"point", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "<", 
                    RowBox[{"lightsource", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"tVal", "=", 
                    RowBox[{
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"zComponent", "[", 
                    RowBox[{"t", ",", "point"}], "]"}], "==", "0"}], ",", 
                    "t"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"solution", ",", 
                    RowBox[{"lightPath", "[", 
                    RowBox[{"tVal", ",", "point"}], "]"}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"properDisplay", "=", "False"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                   
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"solution", ",", "point"}], "]"}]}], "]"}]}], 
                "]"}]}], ",", "\[IndentingNewLine]", "\"\<XZ\>\"", ",", 
              RowBox[{
               RowBox[{"addCastedPoint", "[", "point_", "]"}], ":=", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "tVal", "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"point", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "!=", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sign", "[", 
                    RowBox[{"point", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "==", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"lightsource", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&&", " ", 
                    RowBox[{
                    RowBox[{"point", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<", 
                    RowBox[{"lightsource", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"tVal", "=", 
                    RowBox[{
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"yComponent", "[", 
                    RowBox[{"t", ",", "point"}], "]"}], "==", "0"}], ",", 
                    "t"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"solution", ",", 
                    RowBox[{"lightPath", "[", 
                    RowBox[{"tVal", ",", "point"}], "]"}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"properDisplay", "=", "False"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                   
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"solution", ",", "point"}], "]"}]}], "]"}]}], 
                "]"}]}], ",", "\[IndentingNewLine]", "\"\<YZ\>\"", ",", 
              RowBox[{
               RowBox[{"addCastedPoint", "[", "point_", "]"}], ":=", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "tVal", "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"point", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "!=", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sign", "[", 
                    RowBox[{"point", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "==", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"lightsource", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "&&", " ", 
                    RowBox[{
                    RowBox[{"point", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<", 
                    RowBox[{"lightsource", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"tVal", "=", 
                    RowBox[{
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"xComponent", "[", 
                    RowBox[{"t", ",", "point"}], "]"}], "==", "0"}], ",", 
                    "t"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"solution", ",", 
                    RowBox[{"lightPath", "[", 
                    RowBox[{"tVal", ",", "point"}], "]"}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"properDisplay", "=", "False"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                   
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"solution", ",", "point"}], "]"}]}], "]"}]}], 
                "]"}]}]}], "\[IndentingNewLine]", " ", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<=", "len"}], ",", 
              RowBox[{"i", "+=", "1"}], ",", 
              RowBox[{"addCastedPoint", "[", 
               RowBox[{"figure", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "Checking", " ", "if", " ", "shadow", " ", "is", " ", "being", 
               " ", "modeled", " ", "correctly"}], " ", "-", " ", 
              RowBox[{
              "if", " ", "not", " ", "error", " ", "message", " ", "is", " ", 
               "displayed"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"properDisplay", ",", 
              RowBox[{"warningdisplayed", "=", "False"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{"warningdisplayed", ",", ",", 
                RowBox[{
                 RowBox[{"warningdisplayed", "=", "True"}], ";", 
                 RowBox[{
                 "MessageDialog", "[", 
                  "\"\<Object is on the wrong side of the plane. \\n or \
\\nLight source is between object and a plane.\\n \\nShadow won't be \
displayed properly!\>\"", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
            ";", "\[IndentingNewLine]", "solution"}]}], "\[IndentingNewLine]",
           "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"DynamicModule", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"plane", ",", "shadow", ",", 
            RowBox[{"setofpoints", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"userpoints", "=", "setofpoints"}]}], "}"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Column", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "You", " ", "can", " ", "enter", " ", "your", " ", "own", " ", 
              "figure", " ", "there"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Enter points creating a figure {x,y,z}:\>\"", ",", "10", 
               ",", "Blue", ",", "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
             
             RowBox[{"InputField", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", "userpoints", "]"}], ",", 
               RowBox[{"FieldSize", "->", 
                RowBox[{"{", 
                 RowBox[{"30", ",", " ", "4"}], "}"}]}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Button", "[", 
              RowBox[{"\"\<Apply\>\"", ",", 
               RowBox[{"(", 
                RowBox[{"setofpoints", "=", "userpoints"}], ")"}]}], "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Choose plane on which shadow is casted:\>\"", ",", "10", 
               ",", "Blue", ",", "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
             
             RowBox[{"(*", 
              RowBox[{
              "Buttons", " ", "to", " ", "choose", " ", "plane", " ", "on", 
               " ", "which", " ", "shadow", " ", "is", " ", "casted"}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Row", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<XY\>\"", ",", 
                  RowBox[{"(", 
                   RowBox[{"selectedPlane", "=", "\"\<XY\>\""}], ")"}], ",", 
                  RowBox[{"Enabled", "->", 
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"selectedPlane", "=!=", "\"\<XY\>\""}], "]"}]}]}],
                  "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<XZ\>\"", ",", 
                  RowBox[{"(", 
                   RowBox[{"selectedPlane", "=", "\"\<XZ\>\""}], ")"}], ",", 
                  RowBox[{"Enabled", "->", 
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"selectedPlane", "=!=", "\"\<XZ\>\""}], "]"}]}]}],
                  "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<YZ\>\"", ",", 
                  RowBox[{"(", 
                   RowBox[{"selectedPlane", "=", "\"\<YZ\>\""}], ")"}], ",", 
                  RowBox[{"Enabled", "->", 
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"selectedPlane", "=!=", "\"\<YZ\>\""}], "]"}]}]}],
                  "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "preparing", " ", "appropriate", " ", "plane", " ", "to", " ", 
               "display"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Dynamic", "[", 
              RowBox[{
               RowBox[{"Switch", "[", 
                RowBox[{
                "selectedPlane", ",", "\[IndentingNewLine]", "\"\<XY\>\"", 
                 ",", 
                 RowBox[{"plane", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"LightBlue", ",", 
                    RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}], ",", 
                    RowBox[{"Polygon", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "20"}], ",", 
                    RowBox[{"-", "20"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", 
                    RowBox[{"-", "20"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "20", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "20"}], ",", "20", ",", "0"}], "}"}]}], 
                    "}"}], "]"}]}], "}"}]}], ",", "\"\<XZ\>\"", ",", 
                 RowBox[{"plane", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"LightGreen", ",", 
                    RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}], ",", 
                    RowBox[{"Polygon", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "20"}], ",", "0", ",", 
                    RowBox[{"-", "20"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "0", ",", 
                    RowBox[{"-", "20"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "0", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "20"}], ",", "0", ",", "20"}], "}"}]}], 
                    "}"}], "]"}]}], "}"}]}], ",", "\"\<YZ\>\"", ",", 
                 RowBox[{"plane", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"LightRed", ",", 
                    RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}], ",", 
                    RowBox[{"Polygon", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "20"}], ",", 
                    RowBox[{"-", "20"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "20", ",", 
                    RowBox[{"-", "20"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "20", ",", "20"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "}"}], "]"}]}],
                    "}"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"shadow", "=", 
                RowBox[{"intersectionPoints", "[", 
                 RowBox[{"setofpoints", ",", "selectedPlane"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<Visualisation\>\"", ",", "10", ",", "Blue", ",", 
                 "Bold"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"final", " ", "display"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"Dynamic", "[", 
              RowBox[{"Graphics3D", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"plane", ",", "\[IndentingNewLine]", "Yellow", ",", 
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{"Point", "[", "lightsource", "]"}], ",", 
                  "\[IndentingNewLine]", "Red", ",", 
                  RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
                  RowBox[{"Polygon", "[", "setofpoints", "]"}], ",", 
                  "\[IndentingNewLine]", "Blue", ",", 
                  RowBox[{"Polygon", "[", "shadow", "]"}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Axes", "->", "True"}], ",", 
                RowBox[{"Boxed", "->", "True"}], ",", 
                RowBox[{"AxesLabel", "->", 
                 RowBox[{"{", 
                  RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\""}], 
                  "}"}]}], ",", 
                RowBox[{"PlotRange", "->", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "xAx"}], "/", "2"}], ",", 
                    RowBox[{"xAx", "/", "2"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "yAx"}], "/", "2"}], ",", 
                    RowBox[{"yAx", "/", "2"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "zAx"}], "/", "2"}], ",", 
                    RowBox[{"zAx", "/", "2"}]}], "}"}]}], "}"}]}], ",", 
                RowBox[{"ImageSize", "->", "Medium"}]}], 
               "\[IndentingNewLine]", "]"}], "]"}]}], "\[IndentingNewLine]", 
            "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Light source x coordinate\>\"", ",", "Bold"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "4"}], "}"}], ",", 
         RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Light source y coordinate\>\"", ",", "Bold"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"y", ",", "4"}], "}"}], ",", 
         RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Light source z coordinate\>\"", ",", "Bold"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"z", ",", "4"}], "}"}], ",", 
         RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Style", "[", 
        RowBox[{"\"\<X axis width\>\"", ",", "Bold"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xAx", ",", "10"}], "}"}], ",", "1", ",", "40"}], "}"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Y axis width\>\"", ",", "Bold"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"yAx", ",", "10"}], "}"}], ",", "1", ",", "40"}], "}"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Z axis width\>\"", ",", "Bold"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"zAx", ",", "10"}], "}"}], ",", "1", ",", "40"}], "}"}], 
       ",", 
       RowBox[{"SaveDefinitions", "->", "True"}]}], "\[IndentingNewLine]", 
      "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Shadow of figure\>\"", ",", "14", ",", "Bold"}], "]"}], 
     ",", "Top"}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.942489703508172*^9, 3.942489721175561*^9}, {
   3.942489834737943*^9, 3.9424898774382267`*^9}, {3.942490552876721*^9, 
   3.942490567923578*^9}, {3.94249061154934*^9, 3.942490714152966*^9}, {
   3.942491051892663*^9, 3.942491075186824*^9}, {3.942491172219665*^9, 
   3.942491324855751*^9}, {3.94249136869311*^9, 3.942491443965907*^9}, {
   3.94249154383686*^9, 3.942491585460876*^9}, {3.942492665803815*^9, 
   3.942492670293256*^9}, {3.94249277521024*^9, 3.942492919505396*^9}, {
   3.942493076965826*^9, 3.942493304551711*^9}, {3.942493406717738*^9, 
   3.942493413383826*^9}, {3.942493460295614*^9, 3.942493467249341*^9}, {
   3.9424935290454903`*^9, 3.942493608879581*^9}, {3.942493652661787*^9, 
   3.9424938530105143`*^9}, {3.942493906887865*^9, 3.942493930040701*^9}, {
   3.9424939637775297`*^9, 3.942493970366461*^9}, {3.942494002167489*^9, 
   3.9424940698997307`*^9}, {3.94249418005849*^9, 3.942494201096116*^9}, {
   3.942494233257614*^9, 3.942494234822206*^9}, {3.9424943691668987`*^9, 
   3.942494401359886*^9}, {3.942494469309017*^9, 3.942494574387158*^9}, {
   3.942494627374263*^9, 3.942494656393014*^9}, {3.942494689606418*^9, 
   3.94249476836558*^9}, {3.9424948079508953`*^9, 3.942495183197618*^9}, {
   3.942495226174025*^9, 3.942495393667212*^9}, {3.942495432990376*^9, 
   3.9424954379519787`*^9}, {3.94249546949188*^9, 3.9424955016662483`*^9}, {
   3.942495542805971*^9, 3.942495548825852*^9}, {3.9424956100334377`*^9, 
   3.942495716696926*^9}, {3.9424957518937483`*^9, 3.942495758001749*^9}, {
   3.942495807840591*^9, 3.942495817606883*^9}, {3.942495890252438*^9, 
   3.942495969398741*^9}, {3.9424960168033867`*^9, 3.9424960764426613`*^9}, {
   3.942496149033942*^9, 3.942496170812918*^9}, 3.942496257842937*^9, 
   3.942496302543639*^9, {3.9425147011091146`*^9, 3.942514717352322*^9}, {
   3.942514753913764*^9, 3.942514793648608*^9}, {3.942576358692711*^9, 
   3.942576407786604*^9}, {3.942576471867991*^9, 3.942576533219504*^9}, 
   3.942576625288768*^9, {3.942576676366687*^9, 3.942576782187345*^9}, {
   3.942576880670476*^9, 3.942576985051978*^9}, {3.942577349536748*^9, 
   3.942577369784889*^9}, {3.942577429107738*^9, 3.942577429411233*^9}, {
   3.942577491558092*^9, 3.942577502483186*^9}, {3.942577607255734*^9, 
   3.9425776133195868`*^9}, {3.942578117208439*^9, 3.94257812018101*^9}, {
   3.942578227188275*^9, 3.9425784748549433`*^9}, {3.942578552432719*^9, 
   3.942578584776469*^9}, {3.942578834169851*^9, 3.9425788741362543`*^9}, {
   3.942578998686701*^9, 3.942579126173801*^9}, {3.942579162412543*^9, 
   3.942579166265595*^9}, {3.942579196826367*^9, 3.942579416571612*^9}, {
   3.942579564643392*^9, 3.942579605499691*^9}, {3.9425796543521433`*^9, 
   3.942579676242711*^9}, 3.942579707965023*^9, {3.942579751318231*^9, 
   3.942579863431793*^9}, 3.942579943000398*^9, {3.942580100662678*^9, 
   3.942580103845221*^9}, {3.942580247553392*^9, 3.942580277259563*^9}, 
   3.942580307601007*^9, {3.942580346786425*^9, 3.9425804005727863`*^9}, {
   3.942580467543186*^9, 3.942580547059452*^9}, {3.942580616222985*^9, 
   3.942580624330378*^9}, {3.942580703494029*^9, 3.942580718246132*^9}, {
   3.94258075265072*^9, 3.9425808695770893`*^9}, {3.942580909572141*^9, 
   3.942581195308385*^9}, {3.94258127469536*^9, 3.942581356498962*^9}, {
   3.942581397666378*^9, 3.942581415239024*^9}, {3.942581492992948*^9, 
   3.942581612553589*^9}, {3.942581685339319*^9, 3.942581850823672*^9}, {
   3.942581895071146*^9, 3.942581898571451*^9}, {3.94258205475679*^9, 
   3.942582070896302*^9}, {3.942582121416102*^9, 3.94258215510183*^9}, {
   3.942582210192823*^9, 3.942582216959997*^9}, 3.942582311630864*^9, {
   3.9425823436387777`*^9, 3.942582343779537*^9}, {3.942582462965086*^9, 
   3.942582472772397*^9}, {3.942582515282824*^9, 3.942582523104607*^9}, {
   3.9425825972846003`*^9, 3.942582632345379*^9}, {3.942582688301467*^9, 
   3.9425827321737757`*^9}, {3.942582763612254*^9, 3.942583068106092*^9}, {
   3.942583148017507*^9, 3.942583214661851*^9}, {3.9425832570298634`*^9, 
   3.942583280788245*^9}, {3.942583316437769*^9, 3.9425833175117893`*^9}, {
   3.9425834800384903`*^9, 3.94258350178622*^9}, {3.94258353942619*^9, 
   3.942583552129727*^9}, {3.942583583840527*^9, 3.942583605327103*^9}, {
   3.942583648733265*^9, 3.942583648884087*^9}, {3.942583856568162*^9, 
   3.9425838613797693`*^9}, {3.942583959983182*^9, 3.942584096008605*^9}, {
   3.942584712322538*^9, 3.942584931314199*^9}, {3.9425850314674683`*^9, 
   3.942585047085593*^9}, {3.942585114481469*^9, 3.942585136510203*^9}, {
   3.942585233343747*^9, 3.942585256268444*^9}, {3.942585310863464*^9, 
   3.9425853928645577`*^9}, 3.942585452118738*^9, {3.942592598133183*^9, 
   3.942592601594675*^9}, {3.942593351104398*^9, 3.942593359900363*^9}, {
   3.94259349809089*^9, 3.942593509917967*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"32fc2432-1880-4355-a697-c7a0d802483f"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`x$$ = 
       1.6000000000000014`, $CellContext`xAx$$ = 
       10, $CellContext`y$$ = -0.29999999999999716`, $CellContext`yAx$$ = 
       10, $CellContext`z$$ = 20., $CellContext`zAx$$ = 40., Typeset`show$$ = 
       True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{
          Hold[
           Style["Light source x coordinate", Bold]], 
          Manipulate`Dump`ThisIsNotAControl, ControlType -> None}, {{
           Hold[$CellContext`x$$], 4}, -20, 20, ControlType -> Manipulator}, {
         
          Hold[
           Style["Light source y coordinate", Bold]], 
          Manipulate`Dump`ThisIsNotAControl, ControlType -> None}, {{
           Hold[$CellContext`y$$], 4}, -20, 20, ControlType -> Manipulator}, {
         
          Hold[
           Style["Light source z coordinate", Bold]], 
          Manipulate`Dump`ThisIsNotAControl, ControlType -> None}, {{
           Hold[$CellContext`z$$], 4}, -20, 20, ControlType -> Manipulator}, {
         
          Hold[
           Style["X axis width", Bold]], Manipulate`Dump`ThisIsNotAControl, 
          ControlType -> None}, {{
           Hold[$CellContext`xAx$$], 10}, 1, 40, ControlType -> Manipulator}, {
          Hold[
           Style["Y axis width", Bold]], Manipulate`Dump`ThisIsNotAControl, 
          ControlType -> None}, {{
           Hold[$CellContext`yAx$$], 10}, 1, 40, ControlType -> Manipulator}, {
          Hold[
           Style["Z axis width", Bold]], Manipulate`Dump`ThisIsNotAControl, 
          ControlType -> None}, {{
           Hold[$CellContext`zAx$$], 10}, 1, 40, ControlType -> Manipulator}},
        Typeset`size$$ = {
        296.49375, {219.10242187499998`, 223.06335937499998`}}, 
       Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
       False}, 
      DynamicBox[
       Manipulate`ManipulateBoxes[
       1, StandardForm, 
        "Variables" :> {$CellContext`x$$ = 4, $CellContext`xAx$$ = 
          10, $CellContext`y$$ = 4, $CellContext`yAx$$ = 10, $CellContext`z$$ = 
          4, $CellContext`zAx$$ = 10}, "ControllerVariables" :> {}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> ($CellContext`lightsource = {$CellContext`x$$, \
$CellContext`y$$, $CellContext`z$$}; $CellContext`intersectionPoints[
            Pattern[$CellContext`figure, 
             Blank[]], 
            Pattern[$CellContext`intersectingplane, 
             Blank[]]] := 
          Module[{$CellContext`len, $CellContext`i, \
$CellContext`addCastedPoint, $CellContext`solution = {}, \
$CellContext`properDisplay = True}, $CellContext`len = 
             Length[$CellContext`figure]; 
            Switch[$CellContext`intersectingplane, 
              "XY", $CellContext`addCastedPoint[
                Pattern[$CellContext`point, 
                 Blank[]]] := Module[{$CellContext`tVal}, 
                If[Part[$CellContext`point, 3] != 0, 
                 If[
                  And[Sign[
                    Part[$CellContext`point, 3]] == Sign[
                    Part[$CellContext`lightsource, 3]], 
                   Part[$CellContext`point, 3] < 
                   Part[$CellContext`lightsource, 3]], $CellContext`tVal = 
                   Part[
                    
                    Solve[$CellContext`zComponent[$CellContext`t, \
$CellContext`point] == 0, $CellContext`t], 1, 1, 2]; 
                  AppendTo[$CellContext`solution, 
                    $CellContext`lightPath[$CellContext`tVal, \
$CellContext`point]], $CellContext`properDisplay = False; Null], 
                 AppendTo[$CellContext`solution, $CellContext`point]]], 
              "XZ", $CellContext`addCastedPoint[
                Pattern[$CellContext`point, 
                 Blank[]]] := Module[{$CellContext`tVal}, 
                If[Part[$CellContext`point, 2] != 0, 
                 If[
                  And[Sign[
                    Part[$CellContext`point, 2]] == Sign[
                    Part[$CellContext`lightsource, 2]], 
                   Part[$CellContext`point, 2] < 
                   Part[$CellContext`lightsource, 2]], $CellContext`tVal = 
                   Part[
                    
                    Solve[$CellContext`yComponent[$CellContext`t, \
$CellContext`point] == 0, $CellContext`t], 1, 1, 2]; 
                  AppendTo[$CellContext`solution, 
                    $CellContext`lightPath[$CellContext`tVal, \
$CellContext`point]], $CellContext`properDisplay = False; Null], 
                 AppendTo[$CellContext`solution, $CellContext`point]]], 
              "YZ", $CellContext`addCastedPoint[
                Pattern[$CellContext`point, 
                 Blank[]]] := Module[{$CellContext`tVal}, 
                If[Part[$CellContext`point, 1] != 0, 
                 If[
                  And[Sign[
                    Part[$CellContext`point, 1]] == Sign[
                    Part[$CellContext`lightsource, 1]], 
                   Part[$CellContext`point, 1] < 
                   Part[$CellContext`lightsource, 1]], $CellContext`tVal = 
                   Part[
                    
                    Solve[$CellContext`xComponent[$CellContext`t, \
$CellContext`point] == 0, $CellContext`t], 1, 1, 2]; 
                  AppendTo[$CellContext`solution, 
                    $CellContext`lightPath[$CellContext`tVal, \
$CellContext`point]], $CellContext`properDisplay = False; Null], 
                 AppendTo[$CellContext`solution, $CellContext`point]]]]; 
            For[$CellContext`i = 1, $CellContext`i <= $CellContext`len, 
              AddTo[$CellContext`i, 1], 
              $CellContext`addCastedPoint[
               Part[$CellContext`figure, $CellContext`i]]]; 
            If[$CellContext`properDisplay, $CellContext`warningdisplayed = 
              False, 
              
              If[$CellContext`warningdisplayed, 
               Null, $CellContext`warningdisplayed = True; 
               MessageDialog[
                "Object is on the wrong side of the plane. \n or \nLight \
source is between object and a plane.\n \nShadow won't be displayed \
properly!"]]]; $CellContext`solution]; 
         DynamicModule[{$CellContext`plane, $CellContext`shadow, \
$CellContext`setofpoints = {{1, 1, 0}, {0, 1, 1}, {1, 2, 2}, {2, -1, 
             1}}, $CellContext`userpoints = $CellContext`setofpoints}, 
           Column[{
             Style["Enter points creating a figure {x,y,z}:", 10, Blue, Bold], 
             InputField[
              Dynamic[$CellContext`userpoints], FieldSize -> {30, 4}], 
             Button[
             "Apply", $CellContext`setofpoints = $CellContext`userpoints], 
             Style["Choose plane on which shadow is casted:", 10, Blue, Bold], 
             Row[{
               Button[
               "XY", $CellContext`selectedPlane = "XY", Enabled -> 
                Dynamic[$CellContext`selectedPlane =!= "XY"]], 
               Button[
               "XZ", $CellContext`selectedPlane = "XZ", Enabled -> 
                Dynamic[$CellContext`selectedPlane =!= "XZ"]], 
               Button[
               "YZ", $CellContext`selectedPlane = "YZ", Enabled -> 
                Dynamic[$CellContext`selectedPlane =!= "YZ"]]}], 
             Dynamic[
             Switch[$CellContext`selectedPlane, "XY", $CellContext`plane = {
                  Directive[LightBlue, 
                   Opacity[0.5]], 
                  
                  Polygon[{{-20, -20, 0}, {20, -20, 0}, {20, 20, 0}, {-20, 20,
                    0}}]}, "XZ", $CellContext`plane = {
                  Directive[LightGreen, 
                   Opacity[0.5]], 
                  
                  Polygon[{{-20, 0, -20}, {20, 0, -20}, {20, 0, 20}, {-20, 0, 
                   20}}]}, "YZ", $CellContext`plane = {
                  Directive[LightRed, 
                   Opacity[0.5]], 
                  
                  Polygon[{{0, -20, -20}, {0, 20, -20}, {0, 20, 20}, {0, -20, 
                   20}}]}]; $CellContext`shadow = \
$CellContext`intersectionPoints[$CellContext`setofpoints, \
$CellContext`selectedPlane]; Style["Visualisation", 10, Blue, Bold]], 
             Dynamic[
              Graphics3D[{$CellContext`plane, Yellow, 
                PointSize[Large], 
                Point[$CellContext`lightsource], Red, 
                PointSize[Medium], 
                Polygon[$CellContext`setofpoints], Blue, 
                Polygon[$CellContext`shadow]}, Axes -> True, Boxed -> True, 
               AxesLabel -> {"X", "Y", "Z"}, 
               PlotRange -> {{(-$CellContext`xAx$$)/2, $CellContext`xAx$$/
                  2}, {(-$CellContext`yAx$$)/2, $CellContext`yAx$$/
                  2}, {(-$CellContext`zAx$$)/2, $CellContext`zAx$$/2}}, 
               ImageSize -> Medium]]}]]), "Specifications" :> {
          Style[
          "Light source x coordinate", Bold], {{$CellContext`x$$, 4}, -20, 
           20}, 
          Style[
          "Light source y coordinate", Bold], {{$CellContext`y$$, 4}, -20, 
           20}, 
          Style[
          "Light source z coordinate", Bold], {{$CellContext`z$$, 4}, -20, 
           20}, 
          Style["X axis width", Bold], {{$CellContext`xAx$$, 10}, 1, 40}, 
          Style["Y axis width", Bold], {{$CellContext`yAx$$, 10}, 1, 40}, 
          Style["Z axis width", Bold], {{$CellContext`zAx$$, 10}, 1, 40}}, 
        "Options" :> {}, "DefaultOptions" :> {}], 
       ImageSizeCache -> {492., {242.01953125, 245.98046875}}, 
       SingleEvaluation -> True], Deinitialization :> None, 
      DynamicModuleValues :> {}, 
      Initialization :> ({$CellContext`lightsource = {0.3799999999999999, 
          1.6900000000000004`, 5.}, $CellContext`intersectionPoints[
           Pattern[$CellContext`figure, 
            Blank[]], 
           Pattern[$CellContext`intersectingplane, 
            Blank[]]] := 
         Module[{$CellContext`len, $CellContext`i, \
$CellContext`addCastedPoint, $CellContext`solution = {}, \
$CellContext`properDisplay = True}, $CellContext`len = 
            Length[$CellContext`figure]; 
           Switch[$CellContext`intersectingplane, 
             "XY", $CellContext`addCastedPoint[
               Pattern[$CellContext`point, 
                Blank[]]] := Module[{$CellContext`tVal}, 
               If[Part[$CellContext`point, 3] != 0, 
                If[
                 And[Sign[
                    Part[$CellContext`point, 3]] == Sign[
                    Part[$CellContext`lightsource, 3]], 
                  Part[$CellContext`point, 3] < 
                  Part[$CellContext`lightsource, 3]], $CellContext`tVal = Part[
                    
                    Solve[$CellContext`zComponent[$CellContext`t, \
$CellContext`point] == 0, $CellContext`t], 1, 1, 2]; 
                 AppendTo[$CellContext`solution, 
                   $CellContext`lightPath[$CellContext`tVal, \
$CellContext`point]], $CellContext`properDisplay = False; Null], 
                AppendTo[$CellContext`solution, $CellContext`point]]], 
             "XZ", $CellContext`addCastedPoint[
               Pattern[$CellContext`point, 
                Blank[]]] := Module[{$CellContext`tVal}, 
               If[Part[$CellContext`point, 2] != 0, 
                If[
                 And[Sign[
                    Part[$CellContext`point, 2]] == Sign[
                    Part[$CellContext`lightsource, 2]], 
                  Part[$CellContext`point, 2] < 
                  Part[$CellContext`lightsource, 2]], $CellContext`tVal = Part[
                    
                    Solve[$CellContext`yComponent[$CellContext`t, \
$CellContext`point] == 0, $CellContext`t], 1, 1, 2]; 
                 AppendTo[$CellContext`solution, 
                   $CellContext`lightPath[$CellContext`tVal, \
$CellContext`point]], $CellContext`properDisplay = False; Null], 
                AppendTo[$CellContext`solution, $CellContext`point]]], 
             "YZ", $CellContext`addCastedPoint[
               Pattern[$CellContext`point, 
                Blank[]]] := Module[{$CellContext`tVal}, 
               If[Part[$CellContext`point, 1] != 0, 
                If[
                 And[Sign[
                    Part[$CellContext`point, 1]] == Sign[
                    Part[$CellContext`lightsource, 1]], 
                  Part[$CellContext`point, 1] < 
                  Part[$CellContext`lightsource, 1]], $CellContext`tVal = Part[
                    
                    Solve[$CellContext`xComponent[$CellContext`t, \
$CellContext`point] == 0, $CellContext`t], 1, 1, 2]; 
                 AppendTo[$CellContext`solution, 
                   $CellContext`lightPath[$CellContext`tVal, \
$CellContext`point]], $CellContext`properDisplay = False; Null], 
                AppendTo[$CellContext`solution, $CellContext`point]]]]; 
           For[$CellContext`i = 1, $CellContext`i <= $CellContext`len, 
             AddTo[$CellContext`i, 1], 
             $CellContext`addCastedPoint[
              Part[$CellContext`figure, $CellContext`i]]]; 
           If[$CellContext`properDisplay, $CellContext`warningdisplayed = 
             False, 
             
             If[$CellContext`warningdisplayed, 
              Null, $CellContext`warningdisplayed = True; 
              MessageDialog[
               "Object is on the wrong side of the plane. \n or \nLight \
source is between object and a plane.\n \nShadow won't be displayed \
properly!"]]]; $CellContext`solution], $CellContext`zComponent[
           Pattern[$CellContext`t, 
            Blank[]], 
           Pattern[$CellContext`point, 
            Blank[]]] := 
         Part[$CellContext`point, 3] + (Part[$CellContext`lightsource, 3] - 
            Part[$CellContext`point, 
             3]) $CellContext`t, $CellContext`lightPath[
           Pattern[$CellContext`t, 
            Blank[]], 
           Pattern[$CellContext`point, 
            Blank[]]] := {
           $CellContext`xComponent[$CellContext`t, $CellContext`point], 
           $CellContext`yComponent[$CellContext`t, $CellContext`point], 
           $CellContext`zComponent[$CellContext`t, $CellContext`point]}, \
$CellContext`xComponent[
           Pattern[$CellContext`t, 
            Blank[]], 
           Pattern[$CellContext`point, 
            Blank[]]] := 
         Part[$CellContext`point, 1] + (Part[$CellContext`lightsource, 1] - 
            Part[$CellContext`point, 
             1]) $CellContext`t, $CellContext`yComponent[
           Pattern[$CellContext`t, 
            Blank[]], 
           Pattern[$CellContext`point, 
            Blank[]]] := 
         Part[$CellContext`point, 2] + (Part[$CellContext`lightsource, 2] - 
            Part[$CellContext`point, 
             2]) $CellContext`t, $CellContext`warningdisplayed = 
         False, $CellContext`selectedPlane = "XY"}; 
       Typeset`initDone$$ = True), SynchronousInitialization -> True, 
      UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
      UnsavedVariables :> {Typeset`initDone$$}, 
      UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> True,
      StripOnInput -> False], 
    Manipulate`InterpretManipulate[1]], 
   StyleBox["\"Shadow of figure\"", 14, Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top", ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.942581156218705*^9, 3.942581188654767*^9, 3.942581279369102*^9, 
   3.94258135982537*^9, 3.942581416424793*^9, {3.942581511552381*^9, 
   3.942581547262218*^9}, {3.94258161418381*^9, 3.94258161847234*^9}, {
   3.942581716724347*^9, 3.942581756141686*^9}, 3.94258207175585*^9, 
   3.9425821633810883`*^9, 3.942582218588071*^9, 3.9425823131661663`*^9, 
   3.9425823443281717`*^9, 3.942582474578012*^9, {3.942582940640902*^9, 
   3.942583024104385*^9}, {3.942583058128462*^9, 3.942583068818466*^9}, 
   3.942583221960293*^9, 3.942583281150833*^9, 3.942583323853753*^9, 
   3.942583612835124*^9, 3.942583649661482*^9, {3.942583862277189*^9, 
   3.942583871504537*^9}, {3.942584016207124*^9, 3.942584097016129*^9}, 
   3.942584935202639*^9, 3.942585048447726*^9, 3.94258513714147*^9, 
   3.942585183595261*^9, {3.9425852347564*^9, 3.942585259972821*^9}, 
   3.942585297160005*^9, {3.94258534025679*^9, 3.942585393262988*^9}, 
   3.942585453434714*^9, 3.942592602023542*^9, 3.9425933605040903`*^9, 
   3.942593511361889*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"c9ce26e7-8fc3-4899-9ce5-0a3d9bf7bff6"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.7 Inherited,
FrontEndVersion->"14.0 for Linux x86 (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0f80284c-d22c-4ada-8260-789f3e73abf7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 63722, 1049, 302, "Input",ExpressionUUID->"f541349a-83ac-46c7-8fe0-b2c791cda196"],
Cell[CellGroupData[{
Cell[64305, 1073, 29169, 621, 2085, "Input",ExpressionUUID->"32fc2432-1880-4355-a697-c7a0d802483f"],
Cell[93477, 1696, 17379, 343, 544, "Output",ExpressionUUID->"c9ce26e7-8fc3-4899-9ce5-0a3d9bf7bff6"]
}, Open  ]]
}
]
*)

